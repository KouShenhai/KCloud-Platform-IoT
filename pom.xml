<?xml version="1.0" encoding="UTF-8"?>
<!--
/*
 * Copyright (c) 2022-2025 KCloud-Platform-IoT Author or Authors. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
-->
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.laokou</groupId>
  <artifactId>KCloud-Platform-IoT</artifactId>
  <version>3.5.4-SNAPSHOT</version>
  <packaging>pom</packaging>
  <modules>
    <module>laokou-common</module>
    <module>laokou-cloud</module>
    <module>laokou-service</module>
    <module>laokou-tool</module>
  </modules>
  <name>KCloud-Platform-IoT</name>
  <description>一个企业级微服务架构的云服务多租户IoT平台</description>
  <url>https://koushenhai.github.io/KCloud-Platform-IoT</url>
  <developers>
    <developer>
      <name>laokou</name>
      <email>2413176044@qq.com</email>
      <organization>https://github.com/KouShenhai</organization>
    </developer>
  </developers>
  <scm>
    <tag>kcloud-platform-iot-3.5.4.RELEASE</tag>
    <url>https://github.com/KouShenhai/KCloud-Platform-IoT</url>
    <connection>scm:git:https://github.com/KouShenhai/KCloud-Platform-IoT.git</connection>
    <developerConnection>scm:git:https://github.com/KouShenhai/KCloud-Platform-IoT.git</developerConnection>
  </scm>
  <licenses>
    <license>
      <name>Apache License, Version 2.0</name>
      <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
      <comments>A business-friendly OSS license</comments>
    </license>
  </licenses>
  <properties>
    <!--项目版本-->
    <project.version>3.5.4-SNAPSHOT</project.version>
    <!--JDK版本-->
    <java.version>25</java.version>
    <!--项目编码-->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <!--maven-compiler-plugin版本-->
    <maven.compiler.source>${java.version}</maven.compiler.source>
    <!--maven-compiler-plugin目标版本-->
    <maven.compiler.target>${java.version}</maven.compiler.target>
    <!--maven-compiler-plugin发布版本-->
    <maven.compiler.release>${java.version}</maven.compiler.release>
    <!--maven-compiler-plugin版本-->
    <maven-compiler-plugin.version>3.14.1</maven-compiler-plugin.version>
    <!--spring-boot-maven-plugin版本-->
    <spring-boot-maven-plugin.version>3.5.6</spring-boot-maven-plugin.version>
    <!--maven-surefire-plugin版本-->
    <maven-surefire-plugin.version>3.5.4</maven-surefire-plugin.version>
    <!--maven-enforcer-plugin版本-->
    <maven-enforcer-plugin.version>3.6.2</maven-enforcer-plugin.version>
    <!--docker-maven-plugin版本-->
    <docker-maven-plugin.version>0.46.0</docker-maven-plugin.version>
    <!--maven-checkstyle-plugin版本-->
    <maven-checkstyle-plugin.version>3.6.0</maven-checkstyle-plugin.version>
    <!--spotbugs-maven-plugin版本-->
    <spotbugs-maven-plugin.version>4.9.7.0</spotbugs-maven-plugin.version>
    <!--native-maven-plugin版本-->
    <native-maven-plugin.version>0.11.2</native-maven-plugin.version>
    <!--versions-maven-plugin版本-->
    <versions-maven-plugin.version>2.19.1</versions-maven-plugin.version>
    <!--asciidoctor-maven-plugin版本-->
    <asciidoctor-maven-plugin.version>3.2.0</asciidoctor-maven-plugin.version>
    <!--spring-javaformat-maven-plugin版本-->
    <spring-javaformat-maven-plugin.version>0.0.47</spring-javaformat-maven-plugin.version>
    <!--maven-archetype-plugin版本-->
    <maven-archetype-plugin.version>3.4.1</maven-archetype-plugin.version>
    <!--jacoco-maven-plugin版本-->
    <jacoco-maven-plugin.version>0.8.14</jacoco-maven-plugin.version>
    <!--checkstyle版本-->
    <checkstyle.version>12.0.1</checkstyle.version>
    <!--spring-javaformat-checkstyle版本-->
    <spring-javaformat-checkstyle.version>0.0.47</spring-javaformat-checkstyle.version>
    <!--spring-asciidoctor-backends版本-->
    <spring-asciidoctor-backends.version>0.0.7</spring-asciidoctor-backends.version>
    <!--spring-boot版本-->
    <spring-boot.version>3.5.6</spring-boot.version>
    <!--spring-cloud版本-->
    <spring-cloud.version>2025.0.0</spring-cloud.version>
    <!--cloud-alibaba版本-->
    <spring-cloud-alibaba.version>2025.0.0.0-preview</spring-cloud-alibaba.version>
    <!--spring-framework版本-->
    <spring-framework.version>6.2.12</spring-framework.version>
    <!--spring-data版本-->
    <spring-data.version>2025.0.4</spring-data.version>
    <!--spring-security版本-->
    <spring-security.version>6.5.5</spring-security.version>
    <!--spring-ai版本-->
    <spring-ai.version>1.0.3</spring-ai.version>
    <!--spring-ai-alibaba版本-->
    <spring-ai-alibaba.version>1.0.0.4</spring-ai-alibaba.version>
    <!--dubbo版本-->
    <dubbo.version>3.3.5</dubbo.version>
    <!--springdoc-openapi版本-->
    <springdoc-openapi.version>2.8.13</springdoc-openapi.version>
    <!--testcontainers版本-->
    <testcontainers.version>2.0.0</testcontainers.version>
    <!--vertx版本-->
    <vertx.version>5.0.4</vertx.version>
    <!--mybatis-plus版本 -->
    <mybatis-plus.version>3.5.14</mybatis-plus.version>
    <!--protobuf版本-->
    <protobuf.version>3.25.8</protobuf.version>
    <!--nacos版本-->
    <nacos.version>3.0.3</nacos.version>
    <!--opentelemetry版本-->
    <opentelemetry.version>1.55.0</opentelemetry.version>
    <!--netty版本-->
    <netty.version>4.1.127.Final</netty.version>
    <!--grpc版本-->
    <grpc.version>1.76.0</grpc.version>
    <!--jackson版本-->
    <jackson.version>2.20.0</jackson.version>
    <!--okhttp版本-->
    <okhttp.version>4.12.0</okhttp.version>
    <!--redisson版本-->
    <redisson.version>3.52.0</redisson.version>
    <!--lombok版本-->
    <lombok.version>1.18.42</lombok.version>
    <!--postgresql版本-->
    <postgresql.version>42.7.8</postgresql.version>
    <!--admin版本-->
    <spring-boot-admin.version>3.5.5</spring-boot-admin.version>
    <!--jsoup版本-->
    <jsoup.version>1.21.2</jsoup.version>
    <!--jasypt版本-->
    <jasypt.version>3.0.5</jasypt.version>
    <!--captcha版本-->
    <easy-captcha.version>1.6.2</easy-captcha.version>
    <!--guava版本-->
    <guava.version>33.5.0-jre</guava.version>
    <!--oshi版本-->
    <oshi.version>6.9.0</oshi.version>
    <!--elasticsearch版本-->
    <elasticsearch.version>9.1.5</elasticsearch.version>
    <!--jakarta.servlet-api版本-->
    <jakarta-servlet-api.version>6.1.0</jakarta-servlet-api.version>
    <!--fastexcel-->
    <fastexcel.version>1.3.0</fastexcel.version>
    <!--s3版本-->
    <s3.version>2.35.8</s3.version>
    <!--dynamic-datasource版本-->
    <dynamic-datasource.version>4.3.1</dynamic-datasource.version>
    <!--httpclient5版本-->
    <httpclient5.version>5.5.1</httpclient5.version>
    <!--hibernate-validator版本-->
    <hibernate-validator.version>9.0.1.Final</hibernate-validator.version>
    <!--ip2region版本-->
    <ip2region.version>3.1.0</ip2region.version>
    <!--spring-kafka版本-->
    <spring-kafka.version>3.3.10</spring-kafka.version>
    <!--disruptor版本-->
    <disruptor.version>4.0.0</disruptor.version>
    <!--transmittable-thread-local版本-->
    <transmittable-thread-local.version>2.14.5</transmittable-thread-local.version>
    <!--mockito版本-->
    <mockito.version>5.20.0</mockito.version>
    <!--knife4j版本-->
    <knife4j.version>4.5.0</knife4j.version>
    <!--taos-jdbcdriver版本-->
    <taos-jdbcdriver.version>3.7.5</taos-jdbcdriver.version>
    <!--fory-core版本-->
    <fory-core.version>0.12.3</fory-core.version>
    <!--browscap-java版本-->
    <browscap-java.version>1.5.1</browscap-java.version>
    <!--liquibase-core版本-->
    <liquibase-core.version>5.0.1</liquibase-core.version>
    <!--snail-job版本-->
    <snail-job.version>1.8.0-jdk8</snail-job.version>
    <!--archunit-junit5版本-->
    <archunit-junit5.version>1.4.1</archunit-junit5.version>
    <!--caffeine版本-->
    <caffeine.version>3.2.2</caffeine.version>
    <!--objenesis版本-->
    <objenesis.version>3.4</objenesis.version>
    <!--influxdb-client-java版本-->
    <influxdb-client-java.version>7.3.0</influxdb-client-java.version>
    <!--reactor-core版本-->
    <reactor-core.version>3.7.12</reactor-core.version>
    <!--opencsv版本-->
    <opencsv.version>5.12.0</opencsv.version>
    <!--curator版本-->
    <curator.version>5.9.0</curator.version>
    <!--wiremock版本-->
    <wiremock.version>4.0.0-beta.15</wiremock.version>
    <!--commons-net版本-->
    <commons-net.version>3.12.0</commons-net.version>
    <!--jSerialComm版本-->
    <jSerialComm.version>2.11.2</jSerialComm.version>
    <!--californium版本-->
    <californium.version>4.0.0-M6</californium.version>
    <!--jsoup版本-->
    <jsoup.version>1.21.2</jsoup.version>
    <!--minio版本-->
    <minio.version>8.6.0</minio.version>
    <!--mysql版本-->
    <mysql-connector-j.version>9.4.0</mysql-connector-j.version>
    <!--modbus4j版本-->
    <modbus4j.version>v3.1.0</modbus4j.version>
    <!--mongodb版本-->
    <mongodb.version>4.5.4</mongodb.version>
    <!--fastjson版本-->
    <fastjson.version>2.0.59</fastjson.version>
    <!--spring-security-oauth2-authorization-server版本-->
    <spring-security-oauth2-authorization-server.version>1.5.2</spring-security-oauth2-authorization-server.version>
    <!--swagger-annotations-jakarta版本-->
    <swagger-annotations-jakarta.version>2.2.39</swagger-annotations-jakarta.version>
    <!--jsqlparser版本-->
    <jsqlparser.version>5.2</jsqlparser.version>
    <!--gson版本-->
    <gson.version>2.13.2</gson.version>
    <!--spotbugs版本-->
    <spotbugs.version>4.9.7</spotbugs.version>
    <!--docker主机-->
    <docker.host>tcp://127.0.0.1:2375</docker.host>
    <!--docker仓库-->
    <docker.registry>registry.cn-shenzhen.aliyuncs.com</docker.registry>
    <!--docker命名空间-->
    <docker.namespace>koushenhai</docker.namespace>
    <!--docker用户名-->
    <docker.username>username</docker.username>
    <!--docker密码-->
    <docker.password>password</docker.password>
  </properties>

  <dependencyManagement>
    <dependencies>

      <!-- =============================== 定义 Spring Boot 版本 =============================== -->
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${spring-boot.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <!-- =============================== 定义 Spring Boot 版本 =============================== -->

      <!-- =============================== 定义 Spring Cloud 版本 =============================== -->
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring-cloud.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <!-- =============================== 定义 Spring Cloud 版本 =============================== -->

      <!-- =============================== 定义 Spring Cloud Alibaba 版本 =============================== -->
      <dependency>
        <groupId>com.alibaba.cloud</groupId>
        <artifactId>spring-cloud-alibaba-dependencies</artifactId>
        <version>${spring-cloud-alibaba.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <!-- =============================== 定义 Spring Cloud Alibaba 版本 =============================== -->

      <!-- =============================== 定义 Spring Framework 版本 =============================== -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-framework-bom</artifactId>
        <version>${spring-framework.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <!-- =============================== 定义 Spring Framework 版本 =============================== -->

      <!-- =============================== 定义 Spring Data 版本 =============================== -->
      <dependency>
        <groupId>org.springframework.data</groupId>
        <artifactId>spring-data-bom</artifactId>
        <version>${spring-data.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <!-- =============================== 定义 Spring Data 版本 =============================== -->

      <!-- =============================== 定义 Spring Security 版本 =============================== -->
      <dependency>
        <groupId>org.springframework.security</groupId>
        <artifactId>spring-security-bom</artifactId>
        <version>${spring-security.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <!-- =============================== 定义 Spring Security 版本 =============================== -->

      <!-- =============================== 定义 Spring Ai 版本 =============================== -->
      <dependency>
        <groupId>org.springframework.ai</groupId>
        <artifactId>spring-ai-bom</artifactId>
        <version>${spring-ai.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <!-- =============================== 定义 Spring Ai 版本 =============================== -->

      <!-- =============================== 定义 Spring Ai Alibaba 版本 =============================== -->
      <dependency>
        <groupId>com.alibaba.cloud.ai</groupId>
        <artifactId>spring-ai-alibaba-bom</artifactId>
        <version>${spring-ai-alibaba.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <!-- =============================== 定义 Spring Ai Alibaba 版本 =============================== -->

      <!-- =============================== 定义 Dubbo 版本 =============================== -->
      <dependency>
        <groupId>org.apache.dubbo</groupId>
        <artifactId>dubbo-bom</artifactId>
        <version>${dubbo.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <!-- =============================== 定义 Dubbo 版本 =============================== -->

      <!-- =============================== 定义 Springdoc Openapi 版本 =============================== -->
      <dependency>
        <groupId>org.springdoc</groupId>
        <artifactId>springdoc-openapi-bom</artifactId>
        <version>${springdoc-openapi.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <!-- =============================== 定义 Springdoc Openapi 版本 =============================== -->

      <!-- =============================== 定义 Testcontainers 版本 =============================== -->
      <dependency>
        <groupId>org.testcontainers</groupId>
        <artifactId>testcontainers-bom</artifactId>
        <version>${testcontainers.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <!-- =============================== 定义 Testcontainers 版本 =============================== -->

      <!-- =============================== 定义 Vert.x 版本 =============================== -->
      <dependency>
        <groupId>io.vertx</groupId>
        <artifactId>vertx-dependencies</artifactId>
        <version>${vertx.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <!-- =============================== 定义 Vert.x 版本 =============================== -->

      <!-- =============================== 定义 Mybatis Plus 版本 =============================== -->
      <dependency>
        <groupId>com.baomidou</groupId>
        <artifactId>mybatis-plus-bom</artifactId>
        <version>${mybatis-plus.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <!-- =============================== 定义 Mybatis Plus 版本 =============================== -->

      <!-- =============================== 定义 Protobuf 版本 =============================== -->
      <dependency>
        <groupId>com.google.protobuf</groupId>
        <artifactId>protobuf-bom</artifactId>
        <version>${protobuf.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <!-- =============================== 定义 Protobuf 版本 =============================== -->

      <!-- =============================== 定义 Nacos 版本 =============================== -->
      <dependency>
        <groupId>com.alibaba.nacos</groupId>
        <artifactId>nacos-all</artifactId>
        <version>${nacos.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <!-- =============================== 定义 Nacos 版本 =============================== -->

      <!-- =============================== 定义 Opentelemetry 版本 =============================== -->
      <dependency>
        <groupId>io.opentelemetry</groupId>
        <artifactId>opentelemetry-bom</artifactId>
        <version>${opentelemetry.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <!-- =============================== 定义 Opentelemetry 版本 =============================== -->

      <!-- =============================== 定义 Netty 版本 =============================== -->
      <dependency>
        <groupId>io.netty</groupId>
        <artifactId>netty-bom</artifactId>
        <version>${netty.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <!-- =============================== 定义 Netty 版本 =============================== -->

      <!-- =============================== 定义 GRpc 版本 =============================== -->
      <dependency>
        <groupId>io.grpc</groupId>
        <artifactId>grpc-bom</artifactId>
        <version>${grpc.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <!-- =============================== 定义 GRpc 版本 =============================== -->

      <!-- =============================== 定义 Jackson 版本 =============================== -->
      <dependency>
        <groupId>com.fasterxml.jackson</groupId>
        <artifactId>jackson-bom</artifactId>
        <version>${jackson.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <!-- =============================== 定义 Jackson 版本 =============================== -->

      <!-- =============================== 定义 OkHttp 版本 =============================== -->
      <dependency>
        <groupId>com.squareup.okhttp3</groupId>
        <artifactId>okhttp-bom</artifactId>
        <version>${okhttp.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <!-- =============================== 定义 OkHttp 版本 =============================== -->

      <!-- =============================== 定义 Redisson 版本 =============================== -->
      <dependency>
        <groupId>org.redisson</groupId>
        <artifactId>redisson</artifactId>
        <version>${redisson.version}</version>
      </dependency>
      <!-- =============================== 定义 Redisson 版本 =============================== -->

      <!-- =============================== Fastjson =============================== -->
      <dependency>
        <groupId>com.alibaba</groupId>
        <artifactId>fastjson</artifactId>
        <version>${fastjson.version}</version>
      </dependency>
      <!-- =============================== Fastjson =============================== -->

      <dependency>
        <groupId>com.google.code.gson</groupId>
        <artifactId>gson</artifactId>
        <version>${gson.version}</version>
      </dependency>

      <dependency>
        <groupId>com.github.infiniteautomation</groupId>
        <artifactId>modbus4j</artifactId>
        <version>${modbus4j.version}</version>
      </dependency>
      <dependency>
        <groupId>com.mysql</groupId>
        <artifactId>mysql-connector-j</artifactId>
        <version>${mysql-connector-j.version}</version>
      </dependency>
      <dependency>
        <groupId>io.minio</groupId>
        <artifactId>minio</artifactId>
        <version>${minio.version}</version>
      </dependency>
      <dependency>
        <groupId>org.jsoup</groupId>
        <artifactId>jsoup</artifactId>
        <version>${jsoup.version}</version>
      </dependency>
      <dependency>
        <groupId>org.eclipse.californium</groupId>
        <artifactId>californium-core</artifactId>
        <version>${californium.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fazecast</groupId>
        <artifactId>jSerialComm</artifactId>
        <version>${jSerialComm.version}</version>
      </dependency>
      <dependency>
        <groupId>commons-net</groupId>
        <artifactId>commons-net</artifactId>
        <version>${commons-net.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.curator</groupId>
        <artifactId>curator-framework</artifactId>
        <version>${curator.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.curator</groupId>
        <artifactId>curator-recipes</artifactId>
        <version>${curator.version}</version>
      </dependency>
      <dependency>
        <groupId>org.wiremock</groupId>
        <artifactId>wiremock</artifactId>
        <version>${wiremock.version}</version>
      </dependency>
      <dependency>
        <groupId>com.opencsv</groupId>
        <artifactId>opencsv</artifactId>
        <version>${opencsv.version}</version>
      </dependency>
      <dependency>
        <groupId>io.projectreactor</groupId>
        <artifactId>reactor-core</artifactId>
        <version>${reactor-core.version}</version>
      </dependency>
      <dependency>
        <groupId>com.influxdb</groupId>
        <artifactId>influxdb-client-java</artifactId>
        <version>${influxdb-client-java.version}</version>
      </dependency>
      <dependency>
        <groupId>org.objenesis</groupId>
        <artifactId>objenesis</artifactId>
        <version>${objenesis.version}</version>
      </dependency>
      <dependency>
        <groupId>com.github.ben-manes.caffeine</groupId>
        <artifactId>caffeine</artifactId>
        <version>${caffeine.version}</version>
      </dependency>
      <dependency>
        <groupId>com.tngtech.archunit</groupId>
        <artifactId>archunit-junit5</artifactId>
        <version>${archunit-junit5.version}</version>
      </dependency>
      <dependency>
        <groupId>com.github.xiaoymin</groupId>
        <artifactId>knife4j-openapi3-jakarta-spring-boot-starter</artifactId>
        <version>${knife4j.version}</version>
      </dependency>
      <dependency>
        <groupId>com.aizuda</groupId>
        <artifactId>snail-job-client-starter</artifactId>
        <version>${snail-job.version}</version>
      </dependency>
      <dependency>
        <groupId>com.aizuda</groupId>
        <artifactId>snail-job-client-retry-core</artifactId>
        <version>${snail-job.version}</version>
      </dependency>
      <dependency>
        <groupId>com.aizuda</groupId>
        <artifactId>snail-job-client-job-core</artifactId>
        <version>${snail-job.version}</version>
      </dependency>
      <dependency>
        <groupId>org.liquibase</groupId>
        <artifactId>liquibase-core</artifactId>
        <version>${liquibase-core.version}</version>
      </dependency>
      <dependency>
        <groupId>com.blueconic</groupId>
        <artifactId>browscap-java</artifactId>
        <version>${browscap-java.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.fory</groupId>
        <artifactId>fory-core</artifactId>
        <version>${fory-core.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.fory</groupId>
        <artifactId>fory-extensions</artifactId>
        <version>${fory-core.version}</version>
      </dependency>
      <dependency>
        <groupId>com.taosdata.jdbc</groupId>
        <artifactId>taos-jdbcdriver</artifactId>
        <version>${taos-jdbcdriver.version}</version>
      </dependency>
      <dependency>
        <groupId>com.github.xiaoymin</groupId>
        <artifactId>knife4j-gateway-spring-boot-starter</artifactId>
        <version>${knife4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.postgresql</groupId>
        <artifactId>postgresql</artifactId>
        <version>${postgresql.version}</version>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>${mockito.version}</version>
      </dependency>
      <dependency>
        <groupId>com.alibaba</groupId>
        <artifactId>transmittable-thread-local</artifactId>
        <version>${transmittable-thread-local.version}</version>
      </dependency>
      <dependency>
        <groupId>com.lmax</groupId>
        <artifactId>disruptor</artifactId>
        <version>${disruptor.version}</version>
      </dependency>
      <dependency>
        <groupId>cn.idev.excel</groupId>
        <artifactId>fastexcel</artifactId>
        <version>${fastexcel.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.kafka</groupId>
        <artifactId>spring-kafka</artifactId>
        <version>${spring-kafka.version}</version>
      </dependency>
      <dependency>
        <groupId>org.lionsoul</groupId>
        <artifactId>ip2region</artifactId>
        <version>${ip2region.version}</version>
      </dependency>
      <dependency>
        <groupId>org.hibernate.validator</groupId>
        <artifactId>hibernate-validator</artifactId>
        <version>${hibernate-validator.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.httpcomponents.client5</groupId>
        <artifactId>httpclient5</artifactId>
        <version>${httpclient5.version}</version>
      </dependency>
      <dependency>
        <groupId>com.baomidou</groupId>
        <artifactId>dynamic-datasource-spring-boot3-starter</artifactId>
        <version>${dynamic-datasource.version}</version>
      </dependency>
      <dependency>
        <groupId>software.amazon.awssdk</groupId>
        <artifactId>s3</artifactId>
        <version>${s3.version}</version>
      </dependency>
      <!-- 定义 lombok 版本 -->
      <dependency>
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok</artifactId>
        <version>${lombok.version}</version>
      </dependency>
      <!-- 定义 spring boot admin 版本 -->
      <dependency>
        <groupId>de.codecentric</groupId>
        <artifactId>spring-boot-admin-starter-server</artifactId>
        <version>${spring-boot-admin.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>${guava.version}</version>
      </dependency>
      <dependency>
        <groupId>com.github.ulisesbocchio</groupId>
        <artifactId>jasypt-spring-boot-starter</artifactId>
        <version>${jasypt.version}</version>
      </dependency>

      <dependency>
        <groupId>com.github.oshi</groupId>
        <artifactId>oshi-core</artifactId>
        <version>${oshi.version}</version>
      </dependency>

      <!-- =============================== Elasticsearch =============================== -->
      <dependency>
        <groupId>co.elastic.clients</groupId>
        <artifactId>elasticsearch-java</artifactId>
        <version>${elasticsearch.version}</version>
      </dependency>
      <!-- =============================== Elasticsearch =============================== -->

      <dependency>
        <groupId>jakarta.servlet</groupId>
        <artifactId>jakarta.servlet-api</artifactId>
        <version>${jakarta-servlet-api.version}</version>
      </dependency>
      <dependency>
        <groupId>com.github.whvcse</groupId>
        <artifactId>easy-captcha</artifactId>
        <version>${easy-captcha.version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework.security</groupId>
        <artifactId>spring-security-oauth2-authorization-server</artifactId>
        <version>${spring-security-oauth2-authorization-server.version}</version>
      </dependency>

      <dependency>
        <groupId>io.swagger.core.v3</groupId>
        <artifactId>swagger-annotations-jakarta</artifactId>
        <version>${swagger-annotations-jakarta.version}</version>
      </dependency>

      <dependency>
        <groupId>com.github.jsqlparser</groupId>
        <artifactId>jsqlparser</artifactId>
        <version>${jsqlparser.version}</version>
      </dependency>

    </dependencies>
  </dependencyManagement>

  <repositories>
    <repository>
      <id>tencent-cloud-mirror</id>
      <name>TenantCloud Maven Central</name>
      <url>https://mirrors.cloud.tencent.com/nexus/repository/maven-public/</url>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
      <releases>
        <enabled>true</enabled>
      </releases>
    </repository>
    <repository>
      <id>tencent-mirror</id>
      <name>Tenant Maven Central</name>
      <url>https://mirrors.tencent.com/nexus/repository/maven-public</url>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
      <releases>
        <enabled>true</enabled>
      </releases>
    </repository>
    <repository>
      <id>spring-milestones</id>
      <name>Spring Milestones</name>
      <url>https://repo.spring.io/milestone</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>spring-snapshots</id>
      <name>Spring Snapshots</name>
      <url>https://repo.spring.io/snapshot</url>
      <releases>
        <enabled>false</enabled>
      </releases>
    </repository>
    <repository>
      <id>sonatype-nexus-snapshots</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
  </repositories>

  <profiles>
    <!-- 开发环境 -->
    <profile>
      <id>dev</id>
      <properties>
        <PROFILE-ACTIVE>dev</PROFILE-ACTIVE>
        <SSL-ENABLED>false</SSL-ENABLED>
        <DS-HOST>postgresql</DS-HOST>
        <DS-PORT>5432</DS-PORT>
        <DS-DRIVER>org.postgresql.Driver</DS-DRIVER>
        <DS-PLATFORM>postgresql</DS-PLATFORM>
        <NACOS-NAMESPACE>0dac1a68-2f01-40df-bd26-bf0cb199057a</NACOS-NAMESPACE>
        <NACOS-DISCOVERY-ADDRESS>nacos:8848</NACOS-DISCOVERY-ADDRESS>
        <NACOS-CONFIG-ADDRESS>nacos:8848</NACOS-CONFIG-ADDRESS>
        <NACOS-GROUP>IOT_GROUP</NACOS-GROUP>
        <NACOS-USERNAME>nacos</NACOS-USERNAME>
        <NACOS-PASSWORD>nacos</NACOS-PASSWORD>
        <NACOS-CLUSTER-NAME>nacos-cluster</NACOS-CLUSTER-NAME>
        <SECRET-KEY>laokou</SECRET-KEY>
      </properties>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
    </profile>
    <!-- 测试环境 -->
    <profile>
      <id>test</id>
      <properties>
        <PROFILE-ACTIVE>test</PROFILE-ACTIVE>
        <SSL-ENABLED>false</SSL-ENABLED>
        <DS-HOST>postgresql</DS-HOST>
        <DS-PORT>5432</DS-PORT>
        <DS-DRIVER>org.postgresql.Driver</DS-DRIVER>
        <DS-PLATFORM>postgresql</DS-PLATFORM>
        <NACOS-NAMESPACE>a61abd4c-ef96-42a5-99a1-616adee531f3</NACOS-NAMESPACE>
        <NACOS-DISCOVERY-ADDRESS>nacos:8848</NACOS-DISCOVERY-ADDRESS>
        <NACOS-CONFIG-ADDRESS>nacos:8848</NACOS-CONFIG-ADDRESS>
        <NACOS-GROUP>IOT_GROUP</NACOS-GROUP>
        <NACOS-USERNAME>nacos</NACOS-USERNAME>
        <NACOS-PASSWORD>nacos</NACOS-PASSWORD>
        <NACOS-CLUSTER-NAME>nacos-cluster</NACOS-CLUSTER-NAME>
        <SECRET-KEY>laokou</SECRET-KEY>
      </properties>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
    </profile>
    <!-- 正式环境 -->
    <profile>
      <id>prod</id>
      <properties>
        <PROFILE-ACTIVE>prod</PROFILE-ACTIVE>
        <SSL-ENABLED>false</SSL-ENABLED>
        <!--suppress UnresolvedMavenProperty -->
        <DS-HOST>${DS_HOST:postgresql}</DS-HOST>
        <!--suppress UnresolvedMavenProperty -->
        <DS-PORT>${DS_PORT:5432}</DS-PORT>
        <!--suppress UnresolvedMavenProperty -->
        <DS-DRIVER>${DS_DRIVER:org.postgresql.Driver}</DS-DRIVER>
        <!--suppress UnresolvedMavenProperty -->
        <DS-PLATFORM>${DS_PLATFORM:postgresql}</DS-PLATFORM>
        <!--suppress UnresolvedMavenProperty -->
        <NACOS-NAMESPACE>${NACOS_NAMESPACE:8140e92b-fb43-48f5-b63b-7506185206a5}</NACOS-NAMESPACE>
        <!--suppress UnresolvedMavenProperty -->
        <NACOS-DISCOVERY-ADDRESS>${NACOS_DISCOVERY_ADDRESS:nacos:8848}</NACOS-DISCOVERY-ADDRESS>
        <!--suppress UnresolvedMavenProperty -->
        <NACOS-CONFIG-ADDRESS>${NACOS_CONFIG_ADDRESS:nacos:8848}</NACOS-CONFIG-ADDRESS>
        <!--suppress UnresolvedMavenProperty -->
        <NACOS-GROUP>${NACOS_GROUP:IOT_GROUP}</NACOS-GROUP>
        <!--suppress UnresolvedMavenProperty -->
        <NACOS-USERNAME>${NACOS_USERNAME:nacos}</NACOS-USERNAME>
        <!--suppress UnresolvedMavenProperty -->
        <NACOS-PASSWORD>${NACOS_PASSWORD:nacos}</NACOS-PASSWORD>
        <!--suppress UnresolvedMavenProperty -->
        <NACOS-CLUSTER-NAME>${NACOS_CLUSTER_NAME:nacos-cluster}</NACOS-CLUSTER-NAME>
        <!--suppress UnresolvedMavenProperty -->
        <SECRET-KEY>${SECRET_KEY:laokou}</SECRET-KEY>
      </properties>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
    </profile>
  </profiles>

  <build>
    <plugins>
      <!--先set后commit【先运行插件，再修改版本】-->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>versions-maven-plugin</artifactId>
        <version>${versions-maven-plugin.version}</version>
        <configuration>
          <!--备份版本-->
          <generateBackupPoms>true</generateBackupPoms>
          <newVersion>3.5.4</newVersion>
          <oldVersion>3.5.4-SNAPSHOT</oldVersion>
        </configuration>
      </plugin>
      <plugin>
        <groupId>io.spring.javaformat</groupId>
        <artifactId>spring-javaformat-maven-plugin</artifactId>
        <version>${spring-javaformat-maven-plugin.version}</version>
        <executions>
          <execution>
            <phase>validate</phase>
            <inherited>true</inherited>
            <goals>
              <goal>validate</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>${maven-checkstyle-plugin.version}</version>
        <configuration>
          <!-- 配置文件路径 -->
          <configLocation>${maven.multiModuleProjectDirectory}/checkstyle/checkstyle.xml</configLocation>
          <!-- true表示在命令行或控制台输出检查结果，否则结果不会直接在控制台显示 -->
          <consoleOutput>true</consoleOutput>
          <!-- true表示检查到错误，则整个构建过程失败 -->
          <failsOnError>true</failsOnError>
          <!-- 是否直接构造失败，true只要任何一个代码规范不通过，从而直接构建失败，false代码检查不通过，不会导致构建失败，但会报告违规情况 -->
          <failOnViolation>true</failOnViolation>
          <!-- 是否包含测试代码目录，true包含，false不包含，只检查主目录代码 -->
          <includeTestSourceDirectory>true</includeTestSourceDirectory>
          <!-- 是否跳过代码规范检查，true跳过，false不跳过 -->
          <skip>false</skip>
          <!-- checkstyle报告是否包含代码引用链接，false不包含，true包含 -->
          <linkXRef>false</linkXRef>
        </configuration>
        <executions>
          <!-- 执行mvn install启动代码规范扫描 -->
          <execution>
            <id>install</id>
            <phase>install</phase>
            <goals>
              <goal>checkstyle</goal>
            </goals>
          </execution>
          <execution>
            <id>checkstyle-validation</id>
            <phase>validate</phase>
            <inherited>true</inherited>
            <configuration>
              <configLocation>checkstyle/checkstyle.xml</configLocation>
              <includeTestSourceDirectory>true</includeTestSourceDirectory>
            </configuration>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>com.puppycrawl.tools</groupId>
            <artifactId>checkstyle</artifactId>
            <version>${checkstyle.version}</version>
          </dependency>
          <dependency>
            <groupId>io.spring.javaformat</groupId>
            <artifactId>spring-javaformat-checkstyle</artifactId>
            <version>${spring-javaformat-checkstyle.version}</version>
          </dependency>
        </dependencies>
      </plugin>
      <!-- 打包插件，将 Java 源代码编译为字节码（.class 文件） -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
        <configuration>
          <source>${maven.compiler.source}</source>
          <target>${maven.compiler.target}</target>
          <release>${maven.compiler.release}</release>
          <encoding>${project.build.sourceEncoding}</encoding>
          <compilerArgs>
            <!-- 关闭对不推荐使用的编译器选项的警告 -->
            <arg>-Xlint:-options</arg>
            <!--  启用对可变参数使用的警告 -->
            <arg>-Xlint:varargs</arg>
            <!-- 启用对使用原始类型raw types的警告 -->
            <arg>-Xlint:rawtypes</arg>
            <!-- 启用对未检查的操作的警告，比如未检查的类型转换 -->
            <arg>-Xlint:unchecked</arg>
            <!-- 启用对使用过时 API 的警告 -->
            <arg>-Xlint:deprecation</arg>
            <!-- 在编译的字节码中保留方法参数的名称，这对反射或序列化框架非常有用 -->
            <arg>-parameters</arg>
            <!-- 启用注解处理器 -->
            <arg>-proc:full</arg>
          </compilerArgs>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-archetype-plugin</artifactId>
        <version>${maven-archetype-plugin.version}</version>
      </plugin>
      <!-- 执行Docker镜像的构建、推送和运行等操作 -->
      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>${docker-maven-plugin.version}</version>
        <configuration>
          <!--Docker主机 -->
          <dockerHost>${docker.host}</dockerHost>
          <!--Docker私库 -->
          <registry>${docker.registry}</registry>
          <!-- 认证信息 -->
          <authConfig>
            <push>
              <username>${docker.username}</username>
              <password>${docker.password}</password>
            </push>
          </authConfig>
          <images>
            <image>
              <!-- 推送仓库/命名空间/仓库名称:镜像版本号 -->
              <name>${docker.registry}/${docker.namespace}/${project.artifactId}:${project.version}</name>
              <build>
                <tags>
                  <tag>${project.version}</tag>
                </tags>
                <!-- 指定dockerfile文件的位置 -->
                <dockerFile>${project.basedir}/Dockerfile</dockerFile>
              </build>
            </image>
          </images>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>
        <configuration>
          <skip>false</skip>
          <testFailureIgnore>true</testFailureIgnore>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco-maven-plugin.version}</version>
        <configuration>
          <skip>false</skip>
          <destFile>${project.build.directory}/coverage-reports/jacoco-unit.exec</destFile>
          <dataFile>${project.build.directory}/coverage-reports/jacoco-unit.exec</dataFile>
        </configuration>
        <executions>
          <execution>
            <id>pre-test</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>post-test</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.asciidoctor</groupId>
        <artifactId>asciidoctor-maven-plugin</artifactId>
        <version>${asciidoctor-maven-plugin.version}</version>
        <executions>
          <execution>
            <id>generate-html-documentation</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>process-asciidoc</goal>
            </goals>
            <configuration>
              <backend>spring-html</backend>
            </configuration>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>io.spring.asciidoctor.backends</groupId>
            <artifactId>spring-asciidoctor-backends</artifactId>
            <version>${spring-asciidoctor-backends.version}</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>${maven-enforcer-plugin.version}</version>
        <executions>
          <execution>
            <id>enforce-standards</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <!-- 强制Maven版本 -->
                <requireMavenVersion>
                  <version>3.9.11</version>
                </requireMavenVersion>

                <!-- 强制JDK版本 -->
                <requireJavaVersion>
                  <version>25</version>
                </requireJavaVersion>

                <!-- 禁止重复依赖 -->
                <banDuplicatePomDependencyVersions/>

                <!-- 检查环境变量 -->
                <requireEnvironmentVariable>
                  <variableName>JAVA_HOME</variableName>
                </requireEnvironmentVariable>

                <!-- 检查系统属性 -->
                <requireProperty>
                  <property>project.version</property>
                  <message>请检查项目版本</message>
                  <regex>.*\d+.\d+.\d+.*</regex>
                </requireProperty>
              </rules>
              <fail>true</fail>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-maven-plugin</artifactId>
        <version>${spotbugs-maven-plugin.version}</version>
        <dependencies>
          <dependency>
            <groupId>com.github.spotbugs</groupId>
            <artifactId>spotbugs</artifactId>
            <version>${spotbugs.version}</version>
          </dependency>
        </dependencies>
      </plugin>
    </plugins>
    <!-- profile对资源的操作 -->
    <resources>
      <!-- 打包的时候先去掉所有的配置文件 -->
      <resource>
        <directory>src/main/resources</directory>
        <excludes>
          <exclude>application*.yml</exclude>
          <exclude>bootstrap*.yml</exclude>
          <exclude>log4j2*.xml</exclude>
          <exclude>*.json</exclude>
          <exclude>*.properties</exclude>
        </excludes>
      </resource>
      <!-- 添加需要包含的文件 -->
      <resource>
        <directory>src/main/resources</directory>
        <!-- 是否替换yml或者properties里@xx@表示的maven properties属性值 -->
        <filtering>true</filtering>
        <!-- 在打包的时候，根据-P参数，加上需要的yml配置文件 -->
        <includes>
          <include>application.yml</include>
          <!--suppress UnresolvedMavenProperty -->
          <include>application-${PROFILE-ACTIVE}.yml</include>
          <include>application.properties</include>
          <!--suppress UnresolvedMavenProperty -->
          <include>application-${PROFILE-ACTIVE}.properties</include>
          <include>bootstrap.yml</include>
          <!--suppress UnresolvedMavenProperty -->
          <include>bootstrap-${PROFILE-ACTIVE}.yml</include>
          <include>log4j2.xml</include>
          <!--suppress UnresolvedMavenProperty -->
          <include>log4j2-${PROFILE-ACTIVE}.xml</include>
          <include>log4j2.component.properties</include>
        </includes>
      </resource>
    </resources>
  </build>
</project>
