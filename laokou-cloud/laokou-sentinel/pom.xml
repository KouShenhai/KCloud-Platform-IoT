<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
    <artifactId>laokou-cloud</artifactId>
    <groupId>org.laokou</groupId>
    <version>3.4.0</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>
  <artifactId>laokou-sentinel</artifactId>

  <properties>
    <resource.delimiter>@</resource.delimiter>
    <!--sentinel版本-->
    <sentinel.version>1.8.8</sentinel.version>
    <!--spring-boot版本-->
    <spring-boot.version>3.3.5</spring-boot.version>
    <!--curator版本-->
    <curator.version>5.7.1</curator.version>
    <!--log4j版本-->
    <log4j.version>2.24.1</log4j.version>
    <!--commons-lang版本-->
    <commons-lang.version>2.6</commons-lang.version>
    <!--httpasyncclient版本-->
    <httpasyncclient.version>4.1.5</httpasyncclient.version>
    <!--system-rules版本-->
    <system-rules.version>1.19.0</system-rules.version>
    <!--apollo-openapi版本-->
    <apollo-openapi.version>2.3.0</apollo-openapi.version>
    <!--httpcore-nio版本-->
    <httpcore-nio.version>4.4.16</httpcore-nio.version>
    <!--fastjson版本-->
    <fastjson.version>2.0.53</fastjson.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>com.alibaba.csp</groupId>
      <artifactId>sentinel-core</artifactId>
      <version>${sentinel.version}</version>
    </dependency>
    <dependency>
      <groupId>com.alibaba.csp</groupId>
      <artifactId>sentinel-web-servlet</artifactId>
      <version>${sentinel.version}</version>
    </dependency>
    <dependency>
      <groupId>com.alibaba.csp</groupId>
      <artifactId>sentinel-transport-simple-http</artifactId>
      <version>${sentinel.version}</version>
      <exclusions>
        <exclusion>
          <groupId>com.alibaba</groupId>
          <artifactId>fastjson</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.alibaba.csp</groupId>
      <artifactId>sentinel-parameter-flow-control</artifactId>
      <version>${sentinel.version}</version>
    </dependency>
    <dependency>
      <groupId>com.alibaba.csp</groupId>
      <artifactId>sentinel-api-gateway-adapter-common</artifactId>
      <version>${sentinel.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-tomcat</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-logging</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <version>${log4j.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <version>${commons-lang.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpasyncclient</artifactId>
      <version>${httpasyncclient.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.apache.httpcomponents</groupId>
          <artifactId>httpcore-nio</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpcore-nio</artifactId>
      <version>${httpcore-nio.version}</version>
    </dependency>
    <dependency>
      <groupId>com.alibaba</groupId>
      <artifactId>fastjson</artifactId>
      <version>${fastjson.version}</version>
    </dependency>
    <dependency>
      <groupId>com.alibaba.csp</groupId>
      <artifactId>sentinel-datasource-nacos</artifactId>
      <version>${sentinel.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.ctrip.framework.apollo</groupId>
      <artifactId>apollo-openapi</artifactId>
      <version>${apollo-openapi.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.curator</groupId>
      <artifactId>curator-recipes</artifactId>
      <version>${curator.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-undertow</artifactId>
      <scope>provided</scope>
    </dependency>
  </dependencies>

  <dependencyManagement>
    <dependencies>
      <!-- 定义 spring boot 版本 -->
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>${spring-boot.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <finalName>sentinel-dashboard</finalName>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <configuration>
            <delimiters>
              <delimiter>${resource.delimiter}</delimiter>
            </delimiters>
            <useDefaultDelimiters>false</useDefaultDelimiters>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <!-- 打包插件，将 Java 源代码编译为字节码（.class 文件） -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
          <configuration>
              <source>17</source>
              <target>17</target>
              <encoding>${project.build.sourceEncoding}</encoding>
              <compilerArgs>
                  <!-- 启用对使用过时 API 的警告 -->
                  <arg>-Xlint:deprecation</arg>
                  <!-- 在编译的字节码中保留方法参数的名称，这对反射或序列化框架非常有用 -->
                  <arg>-parameters</arg>
              </compilerArgs>
          </configuration>
      </plugin>
      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>${docker-maven-plugin.version}</version>
      </plugin>
      <!-- 专门用于 Spring Boot 应用的打包和运行，提供打包为可执行 JAR/WAR 文件的功能，还可以在开发过程中直接运行应用 -->
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <version>${spring-boot-maven-plugin.version}</version>
        <configuration>
          <finalName>${project.artifactId}</finalName>
          <!-- main方法的地址 只需要修改这个地址-->
          <mainClass>com.alibaba.csp.sentinel.dashboard.SentinelApp</mainClass>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>repackage</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>${maven-checkstyle-plugin.version}</version>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
    </plugins>

    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>

      <resource>
        <directory>src/main/webapp/</directory>
        <excludes>
          <exclude>resources/node_modules/**</exclude>
        </excludes>
      </resource>
    </resources>
  </build>

</project>
