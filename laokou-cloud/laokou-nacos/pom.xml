<?xml version="1.0" encoding="UTF-8"?>
<!--
/*
 * Copyright (c) 2022-2025 KCloud-Platform-IoT Author or Authors. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
-->
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
    <artifactId>laokou-cloud</artifactId>
    <groupId>org.laokou</groupId>
    <version>3.5.4-SNAPSHOT</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>
  <artifactId>laokou-nacos</artifactId>

  <properties>
    <!--pig-nacos版本-->
    <pig-nacos.version>3.0.2.OEM</pig-nacos.version>
    <!--postgresql版本-->
    <postgresql.version>42.7.8</postgresql.version>
    <!--client-java版本-->
    <client-java.version>22.0.0</client-java.version>
    <!--lombok版本-->
    <lombok.version>1.18.42</lombok.version>
    <!--jasypt版本-->
    <jasypt.version>3.0.5</jasypt.version>
    <!--liquibase版本-->
    <liquibase.version>5.0.1</liquibase.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>io.github.pig-mesh.nacos</groupId>
      <artifactId>nacos-console</artifactId>
      <exclusions>
        <exclusion>
          <groupId>com.google.errorprone</groupId>
          <artifactId>error_prone_annotations</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.commons</groupId>
          <artifactId>commons-collections4</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>io.github.pig-mesh.nacos</groupId>
      <artifactId>nacos-server</artifactId>
    </dependency>
    <dependency>
      <groupId>io.kubernetes</groupId>
      <artifactId>client-java-api</artifactId>
      <version>${client-java.version}</version>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <version>${postgresql.version}</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>${lombok.version}</version>
    </dependency>
    <dependency>
      <groupId>com.github.ulisesbocchio</groupId>
      <artifactId>jasypt-spring-boot-starter</artifactId>
      <version>${jasypt.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-security</artifactId>
    </dependency>
  </dependencies>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>io.github.pig-mesh.nacos</groupId>
        <artifactId>nacos-all</artifactId>
        <version>${pig-nacos.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <finalName>${project.artifactId}</finalName>
    <plugins>
      <!-- 打包插件，将 Java 源代码编译为字节码（.class 文件） -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
        <configuration>
            <source>${maven.compiler.source}</source>
            <target>${maven.compiler.target}</target>
          <encoding>${project.build.sourceEncoding}</encoding>
          <compilerArgs>
            <!-- 启用对使用过时 API 的警告 -->
            <arg>-Xlint:deprecation</arg>
            <!-- 在编译的字节码中保留方法参数的名称，这对反射或序列化框架非常有用 -->
            <arg>-parameters</arg>
          </compilerArgs>
        </configuration>
      </plugin>
      <!-- 专门用于 Spring Boot 应用的打包和运行，提供打包为可执行 JAR/WAR 文件的功能，还可以在开发过程中直接运行应用 -->
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <version>${spring-boot-maven-plugin.version}</version>
        <configuration>
          <finalName>${project.artifactId}</finalName>
          <!-- main方法的地址 只需要修改这个地址-->
          <mainClass>org.laokou.nacos.NacosApp</mainClass>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>repackage</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>${docker-maven-plugin.version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>${maven-checkstyle-plugin.version}</version>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
      <plugin>
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-maven-plugin</artifactId>
        <version>${spotbugs-maven-plugin.version}</version>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.graalvm.buildtools</groupId>
        <artifactId>native-maven-plugin</artifactId>
        <version>${native-maven-plugin.version}</version>
        <extensions>true</extensions>
        <executions>
          <execution>
            <id>build-native</id>
            <phase>package</phase>
          </execution>
          <execution>
            <id>test-native</id>
            <phase>test</phase>
          </execution>
        </executions>
        <configuration>
          <imageName>${project.parent.artifactId}</imageName>
          <mainClass>org.laokou.nacos.NacosApp</mainClass>
          <fallback>false</fallback>
          <!-- 快速构建 -->
          <quickBuild>true</quickBuild>
          <buildArgs>
            <buildArg>--verbose</buildArg>
          </buildArgs>
        </configuration>
      </plugin>
    </plugins>
  </build>

</project>
