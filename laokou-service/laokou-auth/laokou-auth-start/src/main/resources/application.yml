#   /*
#    * Copyright (c) 2022-2025 KCloud-Platform-IoT Author or Authors. All Rights Reserved.
#    *
#    * Licensed under the Apache License, Version 2.0 (the "License");
#    * you may not use this file except in compliance with the License.
#    * You may obtain a copy of the License at
#    *
#    *   http://www.apache.org/licenses/LICENSE-2.0
#    *
#    * Unless required by applicable law or agreed to in writing, software
#    * distributed under the License is distributed on an "AS IS" BASIS,
#    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    * See the License for the specific language governing permissions and
#    * limitations under the License.
#    *
#    */
jasypt:
  encryptor:
    password: @SECRET-KEY@

server:
  compression:
    enabled: true
  ssl:
    # 开启证书
    enabled: @SSL-ENABLED@
    # 证书位置
    key-store: classpath:scg-keystore.p12
    # 证书别名
    key-alias: ${spring.application.name}
    # 秘钥类型
    key-store-type: PKCS12
    # 证书密码
    key-store-password: laokou
  http2:
    enabled: @SSL-ENABLED@
  forward-headers-strategy: native
  shutdown: graceful
  port: ${SERVER_PORT:1111}
  servlet:
    context-path: /api
  tomcat:
    threads:
      # 工作线程池的最大线程数
      max: 500
      # 工作线程池的最小备用线程数
      min-spare: 50
    # 最大连接数
    max-connections: 10000
    # 当所有工作线程都在忙时，允许等待处理的最大连接数
    accept-count: 200
    # URI编码
    uri-encoding: UTF-8
    # 连接超时时间
    connection-timeout: 60s
spring:
  application:
    name: ${SERVICE_ID:laokou-auth}
  profiles:
    active: @PROFILE-ACTIVE@
  threads:
    virtual:
      enabled: true
  lifecycle:
    timeout-per-shutdown-phase: 2m
  # mail
  mail:
    host: smtp.163.com
    username: koushenhai@163.com
    password: ENC(lyyF4qBHGnbwEHfz/RSj2JtahbLqWjMrkFz0hGqcND3Hp19Ea6aJejxqNBYCCGnL7iw8n11Y1xvM7Hp9EDPgtg==)
    default-encoding: UTF-8
  # security
  security:
    oauth2:
      authorization-server:
        enabled: true
        # 多租户
        multiple-issuers-allowed: false
        client:
          default:
            token:
              authorization-code-time-to-live: 5m
              access-token-time-to-live: 5m
              refresh-token-time-to-live: 1h
              device-code-time-to-live: 5m
            registration:
              # Base64编码 OTVUeFNzVFBGQTN0RjEyVEJTTW1VVkswZGE6RnBId0lmdzR3WTkyZE8=
              client-id: 95TxSsTPFA3tF12TBSMmUVK0da
              client-name: OAuth2.1认证【用户名密码/邮箱/手机号/测试/设备授权码/客户端】
              # 对client-secret进行加密【原值 => FpHwIfw4wY92dO】
              client-secret: "{bcrypt}$2a$10$BDcxgmL3WYk7G.QEDTqlBeSudNlV3KUU/V6iC.hKlAbGAC.jbX2fO"
              client-authentication-methods:
                - client_secret_basic
              authorization-grant-types:
                - username_password
                - mail
                - mobile
                - test
                - refresh_token
                - client_credentials
                - urn:ietf:params:oauth:grant-type:device_code
                - urn:ietf:params:oauth:grant-type:jwt-bearer
                - urn:ietf:params:oauth:grant-type:token-exchange
              scopes:
                - read
                - write
            # 客户端请求访问时需要授权同意
            require-authorization-consent: false
            # PKCE
            require-proof-key: false
          pkce:
            token:
              authorization-code-time-to-live: 5m
              access-token-time-to-live: 5m
              refresh-token-time-to-live: 1h
              device-code-time-to-live: 5m
            registration:
              # Base64编码 ZWI3RGVkNWJiRmJkNzg5NmY4YTJjZmREYzk6RHBBa1BmejRlVzE4ZDI=
              client-id: eb7Ded5bbFbd7896f8a2cfdDc9
              client-name: OAuth2.1认证【授权码】
              # 对client-secret进行加密【原值 => DpAkPfz4eW18d2】
              client-secret: "{bcrypt}$2a$10$i2Y4II7czKcLqwAxWLgHqeJaIczss4wHArWmthzn3QoLhpCZtdN0O"
              client-authentication-methods:
                - none
              authorization-grant-types:
                - authorization_code
                - refresh_token
              scopes:
                - read
                - write
              redirect-uris:
                - http://127.0.0.1:8000
                - http://127.0.0.1:8001
                - https://laokou.org.cn
              post-logout-redirect-uris:
                - http://127.0.0.1:8000
                - http://127.0.0.1:8001
                - https://laokou.org.cn
            # 客户端请求访问时需要授权同意
            require-authorization-consent: true
            # PKCE
            require-proof-key: true
      resource-server:
        enabled: true
        request-matcher:
          ignore-patterns:
            GET:
              - /v3/api-docs/**=laokou-auth
              - /swagger-ui.html=laokou-auth
              - /swagger-ui/**=laokou-auth
              - /actuator/**=laokou-auth
              - /error=laokou-auth
              - /v1/captchas/{uuid}=laokou-auth
              - /v1/secrets=laokou-auth
              - /doc.html=laokou-auth
              - /webjars/**=laokou-auth
            POST:
              - /v1/captchas/send/mail=laokou-auth
              - /v1/captchas/send/mobile=laokou-auth
            DELETE:
              - /v1/tokens=laokou-auth
  datasource:
    dynamic:
      # 默认false,建议线上关闭
      p6spy: false
      #设置严格模式,默认false不启动. 启动后在未匹配到指定数据源时候会抛出异常,不启动则使用默认数据源
      strict: true
      datasource:
        master:
          type: com.zaxxer.hikari.HikariDataSource
          driver-class-name: @DS-DRIVER@
          url: jdbc:@DS-PLATFORM@://@DS-HOST@:@DS-PORT@/kcloud_platform?tcpKeepAlive=true&reWriteBatchedInserts=true&stringtype=unspecified&ApplicationName=laokou-auth&useSSL=false
          username: ENC(l126CTjtLG8OkXRNs5aofcN96EQpbQmQorTqpnWFMvcysQLjNBEuX+9f6hLwdoEk)
          password: ENC(BhsqlMbKjWVxPseo9OX8osLuL2Y4rWfGTyBRXaZTsAdzZ1Z4rBewBmoXjf2Hnu4o)
          # https://blog.csdn.net/u014644574/article/details/123680515
          hikari:
            connection-timeout: 180000
            validation-timeout: 3000
            idle-timeout: 180000
            max-lifetime: 1800000
            maximum-pool-size: 60
            minimum-idle: 10
            is-read-only: false
        domain:
          type: com.zaxxer.hikari.HikariDataSource
          driver-class-name: @DS-DRIVER@
          url: jdbc:@DS-PLATFORM@://@DS-HOST@:@DS-PORT@/kcloud_platform_domain?tcpKeepAlive=true&reWriteBatchedInserts=true&stringtype=unspecified&ApplicationName=laokou-auth&useSSL=false
          username: ENC(l126CTjtLG8OkXRNs5aofcN96EQpbQmQorTqpnWFMvcysQLjNBEuX+9f6hLwdoEk)
          password: ENC(BhsqlMbKjWVxPseo9OX8osLuL2Y4rWfGTyBRXaZTsAdzZ1Z4rBewBmoXjf2Hnu4o)
          # https://blog.csdn.net/u014644574/article/details/123680515
          hikari:
            connection-timeout: 180000
            validation-timeout: 3000
            idle-timeout: 180000
            max-lifetime: 1800000
            maximum-pool-size: 60
            minimum-idle: 10
            is-read-only: false
  data:
    redis:
      client-type: lettuce
      host: redis
      port: 6379
      password: ENC(BhsqlMbKjWVxPseo9OX8osLuL2Y4rWfGTyBRXaZTsAdzZ1Z4rBewBmoXjf2Hnu4o)
      connect-timeout: 60000ms #连接超时时长（毫秒）
      timeout: 60000ms #超时时长（毫秒）
      lettuce:
        pool:
          max-active: -1 #连接池最大连接数（使用负值表示无极限）
          max-wait: -1 #连接池最大阻塞等待时间（使用负值表示没有限制）
          max-idle: 500 #连接池最大空闲连接
          min-idle: 200 #连接池最小空间连接
  kafka:
    bootstrap-servers: kafka:9092
    consumer:
      # 消费者组ID
      group-id: ${spring.application.name}
      # 禁用自动提交（按周期）已消费offset
      enable-auto-commit: false
      # 单次poll()调用返回的记录数
      max-poll-records: 500
      # 键的序列化方式
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      # 值的序列化方式
      value-deserializer: org.laokou.common.kafka.config.ForyKafkaDeserializer
      # 单位拉取量
      fetch-min-size: 102400
    producer:
      # 发生错误后，消息重发的次数。
      retries: 5
      # 当有多个消息需要被发送到同一个分区时，生产者会把它们放在同一个批次里。该参数指定了一个批次可以使用的内存大小，按照字节数计算。
      batch-size: 1048576
      # 设置生产者内存缓冲区的大小。
      buffer-memory: 33554432
      # 键的序列化方式
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      # 值的序列化方式
      value-serializer: org.laokou.common.kafka.config.ForyKafkaSerializer
      # acks=0 ： 生产者在成功写入消息之前不会等待任何来自服务器的响应。
      # acks=1 ： 只要集群的首领节点收到消息，生产者就会收到一个来自服务器成功响应。
      # acks=all ：只有当所有参与复制的节点全部收到消息时，生产者才会收到一个来自服务器的成功响应。
      acks: all
      # 启用消息压缩
      compression-type: lz4
    listener:
      # 在侦听器容器中运行的线程数。
      concurrency: 5
      # 批量提交模式
      ack-mode: manual
      # 批量batch类型
      type: batch
      # topic不存在报错
      missing-topics-fatal: true
      observation-enabled: true
    admin:
      auto-create: true
    template:
      observation-enabled: true
  cloud:
    # Loadbalancer配置
    loadbalancer:
      nacos:
        enabled: true
    # network
    inetutils:
      ignored-interfaces:
        - docker0
        - veth.*
    # Sentinel配置
    sentinel:
      datasource:
        # 自定义名称
        db0:
          nacos:
            server-addr: @NACOS-CONFIG-ADDRESS@
            namespace: @NACOS-NAMESPACE@
            data-id: auth-flow.json
            data-type: json
            group-id: @NACOS-GROUP@
            username: @NACOS-USERNAME@
            password: @NACOS-PASSWORD@
            rule-type: flow
      web-context-unify: false
      eager: true #开启饥饿加载，直接初始化
      transport:
        dashboard: sentinel:8972
      filter:
        enabled: true
# actuator
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
  tracing:
    enabled: true
    propagation:
      type: w3c
    # 采样率 => 100%
    sampling:
      probability: 1
  otlp:
    tracing:
      endpoint: http://otel-collector:4317/v1/traces
      compression: gzip
      timeout: 10s
      transport: grpc
    metrics:
      export:
        enabled: false
  metrics:
    tags:
      application: ${spring.application.name}

# knife4j的增强配置，不需要增强可以不配
knife4j:
  enable: true
  setting:
    language: zh_cn

sms:
  type: gyy
  gyy:
    template-id: ENC(h+6CtZDd1st7pAOcFNcjNDmglNIkRsEMFAwPv76STLe7kxdTX0lyX+ZJ4tO9zY3Bd7Xp5511saK9E7nr0ZlnwvPypbTBqz6U/ICCu03EEo4=)
    sign-id: ENC(6DZexca4yMNi/4FiyS0Vwa9uSRUidUpCo9N390puXIZBAGC/T3PxSqF01Bv62TzRbY6/O2IsAKISDqfEtDooofRglNcmN9dVx55pZEwV4ck=)
    appcode: ENC(QIuOx6iFUg1VuPvrdarC3Q4kWhIMsnRjPSkAN+cPoRHitIJ58xicWbaT2sAuVo+PW+SBdJfsp0yUpBZX2usHzxOVosw9WYBuBsQYtns2/9c=)

logging:
  config: classpath:log4j2-@PROFILE-ACTIVE@.xml

springdoc:
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: alpha
  api-docs:
    enabled: true
    path: /v3/api-docs
  group-configs:
    - group: 'default'
      paths-to-match: '/**'
      packages-to-scan: org.laokou.auth.web

# mybatis-plus
mybatis-plus:
  # 全局处理
  global-config:
    db-config:
      column-format: "\"%s\""
  tenant:
    enabled: true
    ignore-tables:
      - sys_source
      - sys_tenant
  mapper-locations: classpath*:/mapper/**/*.xml
  configuration:
    log-impl: org.apache.ibatis.logging.nologging.NoLoggingImpl
