# jasypt
jasypt:
  encryptor:
    password: @JASYPT-ENCRYPTOR-PASSWORD@
server:
  port: ${SERVER_PORT:10005}
  ssl:
    # 开启证书
    enabled: @SSL-ENABLED@
    # 证书位置
    key-store: classpath:scg-keystore.p12
    # 证书别名
    key-alias: ${spring.application.name}
    # 秘钥类型
    key-store-type: PKCS12
    # 证书密码
    key-store-password: laokou
  http2:
    enabled: @SSL-ENABLED@
  shutdown: graceful
  servlet:
    encoding:
      charset: UTF-8
  undertow:
    threads:
      # 设置IO线程数，来执行非阻塞任务，负责多个连接数
      io: 16
      # 工作线程数
      worker: 512
    # 每块buffer的空间大小
    buffer-size: 2048
    # 分配堆外内存
    direct-buffers: true
spring:
  application:
    name: ${SERVICE_ID:laokou-iot}
  profiles:
    active: @PROFILE-ACTIVE@
  # 开启虚拟线程
  threads:
    virtual:
      enabled: true
  lifecycle:
    timeout-per-shutdown-phase: "2m"
  websocket-server:
    ip: ${WEBSOCKET_IP:127.0.0.1}
    port: 1001
    bind-ip: 0.0.0.0
    service-id: ${spring.application.name}-websocket
    key-cert-private-key-password: laokou
  # security
  security:
    oauth2:
      resource-server:
        enabled: true
        request-matcher:
          ignore-patterns:
            GET:
              - /v3/api-docs/**=laokou-iot
              - /swagger-ui.html=laokou-iot
              - /swagger-ui/**=laokou-iot
              - /actuator/**=laokou-iot
              - /error=laokou-iot
              - /doc.html=laokou-iot
              - /webjars/**=laokou-iot
  datasource:
    dynamic:
      # 默认false,建议线上关闭
      p6spy: false
      #设置严格模式,默认false不启动. 启动后在未匹配到指定数据源时候会抛出异常,不启动则使用默认数据源
      strict: true
      datasource:
        master:
          type: com.zaxxer.hikari.HikariDataSource
          driver-class-name: @DATASOURCE-DRIVER-CLASS-NAME@
          url: jdbc:@DATASOURCE-PLATFORM@://@DATASOURCE-HOST@:@DATASOURCE-PORT@/kcloud_platform?tcpKeepAlive=true&reWriteBatchedInserts=true&stringtype=unspecified&ApplicationName=laokou-iot&useSSL=false
          username: ENC(l126CTjtLG8OkXRNs5aofcN96EQpbQmQorTqpnWFMvcysQLjNBEuX+9f6hLwdoEk)
          password: ENC(BhsqlMbKjWVxPseo9OX8osLuL2Y4rWfGTyBRXaZTsAdzZ1Z4rBewBmoXjf2Hnu4o)
          # https://blog.csdn.net/u014644574/article/details/123680515
          hikari:
            connection-timeout: 180000
            validation-timeout: 3000
            idle-timeout: 180000
            max-lifetime: 1800000
            maximum-pool-size: 60
            minimum-idle: 10
            is-read-only: false
        iot:
          type: com.zaxxer.hikari.HikariDataSource
          driver-class-name: @DATASOURCE-DRIVER-CLASS-NAME@
          url: jdbc:@DATASOURCE-PLATFORM@://@DATASOURCE-HOST@:@DATASOURCE-PORT@/kcloud_platform_iot?tcpKeepAlive=true&reWriteBatchedInserts=true&stringtype=unspecified&ApplicationName=laokou-iot&useSSL=false
          username: ENC(l126CTjtLG8OkXRNs5aofcN96EQpbQmQorTqpnWFMvcysQLjNBEuX+9f6hLwdoEk)
          password: ENC(BhsqlMbKjWVxPseo9OX8osLuL2Y4rWfGTyBRXaZTsAdzZ1Z4rBewBmoXjf2Hnu4o)
          # https://blog.csdn.net/u014644574/article/details/123680515
          hikari:
            connection-timeout: 180000
            validation-timeout: 3000
            idle-timeout: 180000
            max-lifetime: 1800000
            maximum-pool-size: 60
            minimum-idle: 10
            is-read-only: false
        domain:
          type: com.zaxxer.hikari.HikariDataSource
          driver-class-name: @DATASOURCE-DRIVER-CLASS-NAME@
          url: jdbc:@DATASOURCE-PLATFORM@://@DATASOURCE-HOST@:@DATASOURCE-PORT@/kcloud_platform_domain?tcpKeepAlive=true&reWriteBatchedInserts=true&stringtype=unspecified&ApplicationName=laokou-iot&useSSL=false
          username: ENC(l126CTjtLG8OkXRNs5aofcN96EQpbQmQorTqpnWFMvcysQLjNBEuX+9f6hLwdoEk)
          password: ENC(BhsqlMbKjWVxPseo9OX8osLuL2Y4rWfGTyBRXaZTsAdzZ1Z4rBewBmoXjf2Hnu4o)
          # https://blog.csdn.net/u014644574/article/details/123680515
          hikari:
            connection-timeout: 180000
            validation-timeout: 3000
            idle-timeout: 180000
            max-lifetime: 1800000
            maximum-pool-size: 60
            minimum-idle: 10
            is-read-only: false
  data:
    redis:
      client-type: lettuce
      host: redis
      port: 6379
      password: ENC(BhsqlMbKjWVxPseo9OX8osLuL2Y4rWfGTyBRXaZTsAdzZ1Z4rBewBmoXjf2Hnu4o)
      connect-timeout: 60000ms #连接超时时长（毫秒）
      timeout: 60000ms #超时时长（毫秒）
      lettuce:
        pool:
          # 连接池最大连接数（使用负值表示无极限）
          max-active: -1
          # 连接池最大阻塞等待时间（使用负值表示没有限制）
          max-wait: -1
          # 连接池最大空闲连接
          max-idle: 500
          # 连接池最小空间连接
          min-idle: 200
  kafka:
    bootstrap-servers: kafka:9092
    consumer:
      # 消费者组ID
      group-id: ${spring.application.name}
      # 禁用自动提交（按周期）已消费offset
      enable-auto-commit: false
      # 单次poll()调用返回的记录数
      max-poll-records: 500
      # 键的序列化方式
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      # 值的序列化方式
      value-deserializer: org.laokou.common.kafka.config.FuryKafkaDeserializer
      # 单位拉取量
      fetch-min-size: 1048576
    producer:
      # 发生错误后，消息重发的次数。
      retries: 5
      # 当有多个消息需要被发送到同一个分区时，生产者会把它们放在同一个批次里。该参数指定了一个批次可以使用的内存大小，按照字节数计算。
      batch-size: 1048576
      # 设置生产者内存缓冲区的大小。
      buffer-memory: 33554432
      # 键的序列化方式
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      # 值的序列化方式
      value-serializer: org.laokou.common.kafka.config.FuryKafkaSerializer
      # acks=0 ： 生产者在成功写入消息之前不会等待任何来自服务器的响应。
      # acks=1 ： 只要集群的首领节点收到消息，生产者就会收到一个来自服务器成功响应。
      # acks=all ：只有当所有参与复制的节点全部收到消息时，生产者才会收到一个来自服务器的成功响应。
      acks: all
      # 启用消息压缩
      compression-type: lz4
    listener:
      # 在侦听器容器中运行的线程数。
      concurrency: 5
      # 批量提交模式
      ack-mode: manual
      # 批量batch类型
      type: batch
      # topic不存在报错
      missing-topics-fatal: true
      observation-enabled: true
    admin:
      auto-create: true
    template:
      observation-enabled: true
  pulsar:
    client:
      service-url: pulsar://pulsar:6650
  cloud:
    # Loadbalancer配置
    loadbalancer:
      nacos:
        enabled: true
    inetutils:
      ignored-interfaces:
        - docker0
        - veth.*

springdoc:
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: alpha
  api-docs:
    enabled: true
    path: /v3/api-docs
  group-configs:
    - group: 'default'
      paths-to-match: '/**'
      packages-to-scan: org.laokou.iot.web

# mybatis-plus
mybatis-plus:
  # 全局处理
  global-config:
    db-config:
      column-format: "\"%s\""
  tenant:
    enabled: true
  mapper-locations: classpath*:/mapper/**/*.xml
  configuration:
    log-impl: org.apache.ibatis.logging.nologging.NoLoggingImpl

# actuator
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
  tracing:
    enabled: true
    propagation:
      type: w3c
    # 采样率 => 100%
    sampling:
      probability: 1
  otlp:
    tracing:
      endpoint: http://otel-collector:4317/v1/traces
      compression: gzip
      timeout: 10s
      transport: grpc
    metrics:
      export:
        enabled: false
  metrics:
    tags:
      application: ${spring.application.name}

# knife4j的增强配置，不需要增强可以不配
knife4j:
  enable: true
  setting:
    language: zh_cn

logging:
  config: classpath:log4j2-@PROFILE-ACTIVE@.xml
