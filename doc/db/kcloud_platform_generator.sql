/*
 Navicat Premium Dump SQL

 Source Server         : 127.0.0.1
 Source Server Type    : PostgreSQL
 Source Server Version : 170003 (170003)
 Source Host           : 127.0.0.1:5432
 Source Catalog        : kcloud_platform
 Source Schema         : public

 Target Server Type    : PostgreSQL
 Target Server Version : 170003 (170003)
 File Encoding         : 65001

 Date: 15/05/2025 11:26:07
*/

DROP TABLE IF EXISTS "public"."generator_column";
CREATE TABLE "public"."generator_column" (
	"id" int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	"creator" int8 NOT NULL DEFAULT 0,
	"editor" int8 NOT NULL DEFAULT 0,
	"create_time" timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
	"update_time" timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
	"del_flag" int2 NOT NULL DEFAULT 0,
	"version" int4 NOT NULL DEFAULT 0,
	"tenant_id" int8 NOT NULL DEFAULT 0,
	"name" varchar(100) NOT NULL,
	"comment" varchar(400),
	"type" varchar(100) NOT NULL,
	"required_flag" int2 NOT NULL,
	"save_flag" int2 NOT NULL,
	"modify_flag" int2 NOT NULL,
	"query_flag" int2 NOT NULL,
	"page_flag" int2 NOT NULL,
	"query_type" varchar(50),
	"component_type" varchar(50),
	"dict_type" varchar(50) ,
	"field_name" varchar(50) NOT NULL,
	"field_type" varchar(50) NOT NULL,
	"info_id" int8 NOT NULL
);
COMMENT ON COLUMN "public"."generator_column"."id" IS 'ID';
COMMENT ON COLUMN "public"."generator_column"."creator" IS '创建人';
COMMENT ON COLUMN "public"."generator_column"."editor" IS '编辑人';
COMMENT ON COLUMN "public"."generator_column"."create_time" IS '创建时间';
COMMENT ON COLUMN "public"."generator_column"."update_time" IS '修改时间';
COMMENT ON COLUMN "public"."generator_column"."del_flag" IS '删除标识 0未删除 1已删除';
COMMENT ON COLUMN "public"."generator_column"."version" IS '版本号';
COMMENT ON COLUMN "public"."generator_column"."tenant_id" IS '租户ID';
COMMENT ON COLUMN "public"."generator_column"."name" IS '列名';
COMMENT ON COLUMN "public"."generator_column"."comment" IS '描述';
COMMENT ON COLUMN "public"."generator_column"."type" IS '类型';
COMMENT ON COLUMN "public"."generator_column"."required_flag" IS '必填标识 0否 1是';
COMMENT ON COLUMN "public"."generator_column"."save_flag" IS '保存标识 0否 1是';
COMMENT ON COLUMN "public"."generator_column"."modify_flag" IS '修改标识 0否 1是';
COMMENT ON COLUMN "public"."generator_column"."query_flag" IS '查询标识 0否 1是';
COMMENT ON COLUMN "public"."generator_column"."page_flag" IS '分页标识 0否 1是';
COMMENT ON COLUMN "public"."generator_column"."query_type" IS '查询类型';
COMMENT ON COLUMN "public"."generator_column"."component_type" IS '组件类型';
COMMENT ON COLUMN "public"."generator_column"."dict_type" IS '字典类型';
COMMENT ON COLUMN "public"."generator_column"."field_name" IS '字段名称';
COMMENT ON COLUMN "public"."generator_column"."field_type" IS '字段类型';
COMMENT ON COLUMN "public"."generator_column"."info_id" IS '信息ID';
COMMENT ON TABLE "public"."generator_column" IS '字段';

ALTER TABLE "public"."generator_column" ADD CONSTRAINT "generator_column_pkey" PRIMARY KEY ("id");

DROP TABLE IF EXISTS "public"."generator_info";
CREATE TABLE "public"."generator_info" (
	"id" int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	"creator" int8 NOT NULL DEFAULT 0,
	"editor" int8 NOT NULL DEFAULT 0,
	"create_time" timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
	"update_time" timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
	"del_flag" int2 NOT NULL DEFAULT 0,
	"version" int4 NOT NULL DEFAULT 0,
	"tenant_id" int8 NOT NULL DEFAULT 0,
	"ds_name" varchar(50) NOT NULL,
	"db_name" varchar(50) NOT NULL,
	"table_name" varchar(50) NOT NULL,
	"author" varchar(50)  NOT NULL,
	"comment" varchar(50)  NOT NULL,
	"package_name" varchar(50)  NOT NULL,
	"module_name" varchar(50)  NOT NULL,
	"path" varchar(200)  NOT NULL,
	"service_id" varchar(50)  NOT NULL,
	"group_id" int8 NOT NULL
)
;
COMMENT ON COLUMN "public"."generator_info"."id" IS 'ID';
COMMENT ON COLUMN "public"."generator_info"."creator" IS '创建人';
COMMENT ON COLUMN "public"."generator_info"."editor" IS '编辑人';
COMMENT ON COLUMN "public"."generator_info"."create_time" IS '创建时间';
COMMENT ON COLUMN "public"."generator_info"."update_time" IS '修改时间';
COMMENT ON COLUMN "public"."generator_info"."del_flag" IS '删除标识 0未删除 1已删除';
COMMENT ON COLUMN "public"."generator_info"."version" IS '版本号';
COMMENT ON COLUMN "public"."generator_info"."tenant_id" IS '租户ID';
COMMENT ON COLUMN "public"."generator_info"."ds_name" IS '数据源名称';
COMMENT ON COLUMN "public"."generator_info"."db_name" IS '数据库名称';
COMMENT ON COLUMN "public"."generator_info"."table_name" IS '数据库表名称';
COMMENT ON COLUMN "public"."generator_info"."author" IS '作者';
COMMENT ON COLUMN "public"."generator_info"."comment" IS '描述';
COMMENT ON COLUMN "public"."generator_info"."package_name" IS '包名';
COMMENT ON COLUMN "public"."generator_info"."module_name" IS '模块名称';
COMMENT ON COLUMN "public"."generator_info"."path" IS '生成路径';
COMMENT ON COLUMN "public"."generator_info"."service_id" IS '服务ID';
COMMENT ON COLUMN "public"."generator_info"."group_id" IS '组ID';
COMMENT ON TABLE "public"."generator_info" IS '信息';

ALTER TABLE "public"."generator_info" ADD CONSTRAINT "generator_info_pkey" PRIMARY KEY ("id");

INSERT INTO "public"."generator_info" VALUES (1, 1, 1, '2025-10-03 18:10:38', '2025-10-03 18:10:40', 0, 0, 0, 'master', 'kcloud_platform', 'sys_tenant', 'laokou', '租户', 'org.laokou.admin', 'tenant', 'D:/iot', 'laokou-admin', 1);

DROP TABLE IF EXISTS "public"."generator_template";
CREATE TABLE "public"."generator_template" (
	"id" int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	"creator" int8 NOT NULL DEFAULT 0,
	"editor" int8 NOT NULL DEFAULT 0,
	"create_time" timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
	"update_time" timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
	"del_flag" int2 NOT NULL DEFAULT 0,
	"version" int4 NOT NULL DEFAULT 0,
	"tenant_id" int8 NOT NULL DEFAULT 0,
	"code" varchar(50)  NOT NULL,
	"name" varchar(50)  NOT NULL,
	"path_pattern" varchar(400) NOT NULL,
	"content" text  NOT NULL,
	"remark" varchar(400)
)
;
COMMENT ON COLUMN "public"."generator_template"."id" IS 'ID';
COMMENT ON COLUMN "public"."generator_template"."creator" IS '创建人';
COMMENT ON COLUMN "public"."generator_template"."editor" IS '编辑人';
COMMENT ON COLUMN "public"."generator_template"."create_time" IS '创建时间';
COMMENT ON COLUMN "public"."generator_template"."update_time" IS '修改时间';
COMMENT ON COLUMN "public"."generator_template"."del_flag" IS '删除标识 0未删除 1已删除';
COMMENT ON COLUMN "public"."generator_template"."version" IS '版本号';
COMMENT ON COLUMN "public"."generator_template"."tenant_id" IS '租户ID';
COMMENT ON COLUMN "public"."generator_template"."code" IS '编码';
COMMENT ON COLUMN "public"."generator_template"."name" IS '名称';
COMMENT ON COLUMN "public"."generator_template"."path_pattern" IS '路径表达式';
COMMENT ON COLUMN "public"."generator_template"."content" IS '内容';
COMMENT ON COLUMN "public"."generator_template"."remark" IS '备注';
COMMENT ON TABLE  "public"."generator_template" IS '模板';

ALTER TABLE "public"."generator_template" ADD CONSTRAINT "generator_template_pkey" PRIMARY KEY ("id");

INSERT INTO "public"."generator_template" VALUES (1, 1, 1, '2025-10-03 11:20:06', '2025-10-03 11:20:10', 0, 0, 0, 'microservice_cola_controller', '微服务COLA控制器', '${path}/${serviceId}/${serviceId}-adapter/src/main/java/${packagePath}/web/Controller.java/${className}sController.java', '/*
 * Copyright (c) 2022-2025 KCloud-Platform-IoT Author or Authors. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

package ${packageName}.web;

import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.tags.Tag;
import ${packageName}.${moduleName}.api.${className}ServiceI;
import ${packageName}.${moduleName}.dto.${className}ExportCmd;
import ${packageName}.${moduleName}.dto.${className}GetQry;
import ${packageName}.${moduleName}.dto.${className}ImportCmd;
import ${packageName}.${moduleName}.dto.${className}ModifyCmd;
import ${packageName}.${moduleName}.dto.${className}PageQry;
import ${packageName}.${moduleName}.dto.${className}RemoveCmd;
import ${packageName}.${moduleName}.dto.${className}SaveCmd;
import org.laokou.common.i18n.dto.Page;
import org.laokou.common.i18n.dto.Result;
import org.laokou.common.idempotent.annotation.Idempotent;
import org.laokou.common.log.annotation.OperateLog;
import org.laokou.common.trace.annotation.TraceLog;
import org.springframework.http.MediaType;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;
import ${packageName}.${moduleName}.dto.clientobject.${className}CO;

/**
 *
 * ${comment}管理控制器.
 *
 * @author ${author}
 */
@RestController
@RequiredArgsConstructor
@Tag(name = "${comment}管理", description = "${comment}管理")
public class ${className}sController {

	private final ${className}sServiceI ${moduleName}sServiceI;

	@Idempotent
	@PostMapping("/v1/${moduleName}s")
	@PreAuthorize("hasAuthority(${dsName}:${moduleName}:save'')")
	@OperateLog(module = "${comment}管理", operation = "保存${comment}")
	@Operation(summary = "保存${comment}", description = "保存${comment}")
	public void save${className}(@RequestBody ${className}SaveCmd cmd) {
		${moduleName}sServiceI.save(cmd);
	}

	@PutMapping("/v1/${moduleName}s")
	@PreAuthorize("hasAuthority(${dsName}:${moduleName}:modify'')")
	@OperateLog(module = "${comment}管理", operation = "修改${comment}")
	@Operation(summary = "修改${comment}", description = "修改${comment}")
	@DataCache(name = ${(className)?upper_case}S, key = "#cmd.co.id", operateType = DEL)
	public void modify${className}(@RequestBody ${className}ModifyCmd cmd) {
		${moduleName}sServiceI.modify(cmd);
	}

	@DeleteMapping("/v1/${moduleName}s")
	@PreAuthorize("hasAuthority(${dsName}:${moduleName}:remove'')")
	@OperateLog(module = "${comment}管理", operation = "删除${comment}")
	@Operation(summary = "删除${comment}", description = "删除${comment}")
	public void remove${className}(@RequestBody Long[] ids) {
		${moduleName}sServiceI.remove(new ${className}RemoveCmd(ids));
	}

	@PostMapping(value = "/v1/${moduleName}s/import", consumes = MediaType.MULTIPART_FORM_DATA_VALUE)
	@PreAuthorize("hasAuthority(${dsName}:${moduleName}:import'')")
	@OperateLog(module = "${comment}管理", operation = "导入${comment}")
	@Operation(summary = "导入${comment}", description = "导入${comment}")
	public void import${className}(@RequestPart("files") MultipartFile[] files) {
		${moduleName}sServiceI.importI(new ${className}ImportCmd(files));
	}

	@PostMapping("/v1/${moduleName}s/export")
	@PreAuthorize("hasAuthority(${dsName}:${moduleName}:export'')")
	@OperateLog(module = "${comment}管理", operation = "导出${comment}")
	@Operation(summary = "导出${comment}", description = "导出${comment}")
	public void export${className}(@RequestBody ${className}ExportCmd cmd) {
		${moduleName}sServiceI.export(cmd);
	}

	@TraceLog
	@PostMapping("/v1/${moduleName}s/page")
	@PreAuthorize("hasAuthority(${dsName}:${moduleName}:page'')")
	@Operation(summary = "分页查询${comment}列表", description = "分页查询${comment}列表")
	public Result<Page<${className}CO>> page${className}(@RequestBody ${className}PageQry qry) {
		return ${moduleName}sServiceI.page${className}(qry);
	}

	@TraceLog
	@GetMapping("/v1/${moduleName}s/{id}")
	@DataCache(name = ${(className)?upper_case}S, key = "#id")
	@Operation(summary = "查看${comment}详情", description = "查看${comment}详情")
	public Result<${className}CO> get${className}ById(@PathVariable("id") Long id) {
		return ${moduleName}sServiceI.get${className}ById(new ${className}GetQry(id));
	}

}', '微服务COLA控制器');

DROP TABLE IF EXISTS "public"."generator_group";
CREATE TABLE "public"."generator_group" (
   "id" int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   "creator" int8 NOT NULL DEFAULT 0,
   "editor" int8 NOT NULL DEFAULT 0,
   "create_time" timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
   "update_time" timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
   "del_flag" int2 NOT NULL DEFAULT 0,
   "version" int4 NOT NULL DEFAULT 0,
   "tenant_id" int8 NOT NULL DEFAULT 0,
   "name" varchar(50)  NOT NULL
)
;
COMMENT ON COLUMN "public"."generator_group"."id" IS 'ID';
COMMENT ON COLUMN "public"."generator_group"."creator" IS '创建人';
COMMENT ON COLUMN "public"."generator_group"."editor" IS '编辑人';
COMMENT ON COLUMN "public"."generator_group"."create_time" IS '创建时间';
COMMENT ON COLUMN "public"."generator_group"."update_time" IS '修改时间';
COMMENT ON COLUMN "public"."generator_group"."del_flag" IS '删除标识 0未删除 1已删除';
COMMENT ON COLUMN "public"."generator_group"."version" IS '版本号';
COMMENT ON COLUMN "public"."generator_group"."tenant_id" IS '租户ID';
COMMENT ON COLUMN "public"."generator_group"."name" IS '名称';
COMMENT ON TABLE  "public"."generator_group" IS '组';

ALTER TABLE "public"."generator_group" ADD CONSTRAINT "generator_group_pkey" PRIMARY KEY ("id");

INSERT INTO "public"."generator_group" VALUES (1, 1, 1, '2025-10-03 17:59:23', '2025-10-03 17:59:25', 0, 0, 0, '微服务COLA模板组');

DROP TABLE IF EXISTS "public"."generator_template_group";
CREATE TABLE "public"."generator_template_group" (
	"id" int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	"creator" int8 NOT NULL DEFAULT 0,
	"editor" int8 NOT NULL DEFAULT 0,
	"create_time" timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
	"update_time" timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
	"del_flag" int2 NOT NULL DEFAULT 0,
	"version" int4 NOT NULL DEFAULT 0,
	"tenant_id" int8 NOT NULL DEFAULT 0,
	"template_id" int8  NOT NULL,
	"group_id" int8  NOT NULL
)
;
COMMENT ON COLUMN "public"."generator_template_group"."id" IS 'ID';
COMMENT ON COLUMN "public"."generator_template_group"."creator" IS '创建人';
COMMENT ON COLUMN "public"."generator_template_group"."editor" IS '编辑人';
COMMENT ON COLUMN "public"."generator_template_group"."create_time" IS '创建时间';
COMMENT ON COLUMN "public"."generator_template_group"."update_time" IS '修改时间';
COMMENT ON COLUMN "public"."generator_template_group"."del_flag" IS '删除标识 0未删除 1已删除';
COMMENT ON COLUMN "public"."generator_template_group"."version" IS '版本号';
COMMENT ON COLUMN "public"."generator_template_group"."tenant_id" IS '租户ID';
COMMENT ON COLUMN "public"."generator_template_group"."template_id" IS '模板ID';
COMMENT ON COLUMN "public"."generator_template_group"."group_id" IS '组ID';
COMMENT ON TABLE  "public"."generator_template_group" IS '模板组';

ALTER TABLE "public"."generator_template_group" ADD CONSTRAINT "generator_template_group_pkey" PRIMARY KEY ("id");

CREATE UNIQUE INDEX "generator_template_group_templateId_groupId_idx" ON "public"."generator_template_group" USING btree (
   "template_id",
   "group_id"
);
COMMENT ON INDEX "public"."generator_template_group_templateId_groupId_idx" IS '模板ID_组ID_唯一索引';

INSERT INTO "public"."generator_template_group" VALUES (1, 1, 1, '2025-10-03 18:04:32', '2025-10-03 18:04:34', 0, 0, 0, 1, 1);
