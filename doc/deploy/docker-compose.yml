# /*
#  * Copyright (c) 2022-2024 KCloud-Platform-IoT Author or Authors. All Rights Reserved.
#  * <p>
#  * Licensed under the Apache License, Version 2.0 (the "License");
#  * you may not use this file except in compliance with the License.
#  * You may obtain a copy of the License at
#  * <p>
#  *   http://www.apache.org/licenses/LICENSE-2.0
#  * <p>
#  * Unless required by applicable law or agreed to in writing, software
#  * distributed under the License is distributed on an "AS IS" BASIS,
#  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  * See the License for the specific language governing permissions and
#  * limitations under the License.
#  */
version: '3'
services:
  # web控制台地址：http://127.0.0.1:6060
  # root/taosdata
  tdengine:
    image: tdengine/tdengine:3.3.2.0
    container_name: tdengine
    # 保持容器在没有守护程序的情况下运行
    tty: true
    restart: always
    privileged: true
    ports:
      - "6030-6060:6030-6060/udp"
      - "6030-6060:6030-6060"
    environment:
      - TZ=Asia/Shanghai
    volumes:
      - ./tdengine/data:/var/lib/taos
      - ./tdengine/logs:/var/log/taos
    networks:
      - laokou_network
  emqx:
    image: emqx/emqx:5.7.2
    container_name: emqx
    # 保持容器在没有守护程序的情况下运行
    tty: true
    restart: always
    privileged: true
    ports:
      - "1883:1883"
      - "8083:8083"
      - "8883:8883"
      - "18083:18083"
    environment:
      - TZ=Asia/Shanghai
    networks:
      - laokou_network
  postgresql:
    image: postgis/postgis:16-3.4
    container_name: postgresql
    # 保持容器在没有守护程序的情况下运行
    tty: true
    restart: always
    privileged: true
    ports:
      - "5432:5432"
    volumes:
      - ./postgresql16/data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=laokou123
      - TZ=Asia/Shanghai
    networks:
      - laokou_network
  redis:
    image: redis:7.4.0
    container_name: redis
    # 保持容器在没有守护程序的情况下运行
    tty: true
    restart: always
    privileged: true
    ports:
      - "6379:6379"
    volumes:
      - ./redis7/conf/redis.conf:/etc/redis/redis.conf
      - ./redis7/data:/data
    command: redis-server --appendonly yes --requirepass 'laokou123'
    environment:
      - TZ=Asia/Shanghai
    networks:
      - laokou_network
  kafka:
    image: bitnami/kafka:3.8.0
    container_name: kafka
    tty: true
    ports:
      - '9092:9092'
      - '9093:9093'
    environment:
      # 节点ID
      - KAFKA_BROKER_ID=1
      # 允许使用kraft，即Kafka替代Zookeeper
      - KAFKA_ENABLE_KRAFT=yes
      # kafka角色，做broker，也要做controller
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      # 指定供外部使用的控制类请求信息
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      # 定义安全协议
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      # 定义kafka服务端socket监听端口
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      # 外网访问地址
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka.laokou.org:9092
      # 允许使用PLAINTEXT监听器，默认false，不建议在生产环境使用
      - ALLOW_PLAINTEXT_LISTENER=yes
      # 设置broker最大内存，和初始内存
      - KAFKA_HEAP_OPTS=-Xmx512M -Xms512M
      # 集群地址
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      # 节点ID
      - KAFKA_CFG_NODE_ID=1
    restart: always
    privileged: true
    networks:
      - laokou_network
    extra_hosts:
      - "kafka.laokou.org:192.168.30.1"
  rocketmq-namesrv:
    image: apache/rocketmq:5.3.0
    container_name: rocketmq-namesrv
    # 保持容器在没有守护程序的情况下运行
    tty: true
    restart: always
    privileged: true
    ports:
      - "9876:9876"
    command: sh mqnamesrv
    environment:
      - JAVA_OPT_EXT=-server -Xmx512m -Xms512m -Xmn256m
      - TZ=Asia/Shanghai
    networks:
      - laokou_network
  rocketmq-broker:
    image: apache/rocketmq:5.3.0
    container_name: rocketmq-broker
    # 保持容器在没有守护程序的情况下运行
    tty: true
    restart: always
    privileged: true
    ports:
      - "10909:10909"
      - "10911:10911"
      - "10912:10912"
    # 自动创建主题
    command: sh mqbroker -n rocketmq-namesrv:9876 -c /home/rocketmq/conf/broker.conf autoCreateTopicEnable=true
    environment:
      - JAVA_OPT_EXT=-server -Xmx512m -Xms512m -Xmn256m
      - TZ=Asia/Shanghai
    volumes:
      - ./rocketmq5/broker/conf/broker.conf:/home/rocketmq/conf/broker.conf
    networks:
      - laokou_network
    depends_on:
      - rocketmq-namesrv
  rocketmq-proxy:
    image: apache/rocketmq:5.3.0
    container_name: rocketmq-proxy
    # 保持容器在没有守护程序的情况下运行
    tty: true
    restart: always
    privileged: true
    networks:
      - laokou_network
    depends_on:
      - rocketmq-broker
      - rocketmq-namesrv
    ports:
      - "8080:8080"
      - "8081:8081"
    environment:
      - JAVA_OPT_EXT=-server -Xmx512m -Xms512m -Xmn256m
      - TZ=Asia/Shanghai
      - NAMESRV_ADDR=rocketmq-namesrv:9876
    command: sh mqproxy
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.0
    container_name: elasticsearch
    # 保持容器在没有守护程序的情况下运行
    tty: true
    restart: always
    privileged: true
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - ./elasticsearch8/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - ./elasticsearch8/data:/usr/share/elasticsearch/data
      - ./elasticsearch8/logs:/usr/share/elasticsearch/logs
      - ./elasticsearch8/plugins:/usr/share/elasticsearch/plugins
      - ./elasticsearch8/config/certs/elastic-certificates.p12:/usr/share/elasticsearch/config/certs/elastic-certificates.p12
    environment:
      - TZ=Asia/Shanghai
      - ES_JAVA_OPTS=-Xmx1g -Xms1g
      - ELASTIC_PASSWORD=laokou123
    networks:
      - laokou_network
    ulimits:
      memlock:
        soft: -1
        hard: -1
  laokou-register:
    image: registry.cn-shenzhen.aliyuncs.com/koushenhai/laokou-register:3.2.1
    container_name: laokou-register
    # 保持容器在没有守护程序的情况下运行
    tty: true
    restart: always
    privileged: true
    ports:
      - "8848:8848"
      - "9848:9848"
      - "9849:9849"
    volumes:
      - ./nacos/logs:/opt
    env_file:
      - env/nacos.env
    extra_hosts:
      - "postgresql.laokou.org:192.168.30.1"
    networks:
      - laokou_network
    depends_on:
      - postgresql
  laokou-sentinel:
    image: registry.cn-shenzhen.aliyuncs.com/koushenhai/laokou-sentinel:3.2.1
    container_name: laokou-sentinel
    # 保持容器在没有守护程序的情况下运行
    tty: true
    restart: always
    privileged: true
    ports:
      - "8972:8972"
    volumes:
      - ./sentinel/logs:/opt
    env_file:
      - env/sentinel.env
    extra_hosts:
      - "sentinel.laokou.org:192.168.30.1"
    networks:
      - laokou_network
  laokou-monitor:
    image: registry.cn-shenzhen.aliyuncs.com/koushenhai/laokou-monitor:3.2.1
    container_name: laokou-monitor
    # 保持容器在没有守护程序的情况下运行
    tty: true
    restart: always
    privileged: true
    ports:
      - "5000:5000"
    volumes:
      - ./monitor/logs:/opt
    env_file:
      - env/monitor.env
    extra_hosts:
      - "monitor.laokou.org:192.168.30.1"
      - "nacos.laokou.org:192.168.30.1"
    depends_on:
      - laokou-register
    networks:
      - laokou_network
  laokou-gateway:
    image: registry.cn-shenzhen.aliyuncs.com/koushenhai/laokou-gateway:3.2.1
    container_name: laokou-gateway
    tty: true
    env_file:
      - env/common.env
      - env/gateway.env
    ports:
      - "5555:5555"
    volumes:
      - ./gateway/logs:/opt
    extra_hosts:
      - "nacos.laokou.org:192.168.30.1"
      - "kafka.laokou.org:192.168.30.1"
      - "redis.laokou.org:192.168.30.1"
    restart: always
    privileged: true
    networks:
      - laokou_network
    depends_on:
      - laokou-register
  laokou-im:
    image: registry.cn-shenzhen.aliyuncs.com/koushenhai/laokou-im-start:3.2.1
    container_name: laokou-im
    tty: true
    env_file:
      - env/common.env
      - env/im.env
    ports:
      - "10001:10001"
    volumes:
      - ./im/logs:/opt
    extra_hosts:
      - "nacos.laokou.org:192.168.30.1"
      - "kafka.laokou.org:192.168.30.1"
      - "redis.laokou.org:192.168.30.1"
      - "rocketmq.laokou.org:192.168.30.1"
    restart: always
    privileged: true
    networks:
      - laokou_network
    depends_on:
      - laokou-register
  laokou-auth:
    image: registry.cn-shenzhen.aliyuncs.com/koushenhai/laokou-auth-start:3.2.1
    container_name: laokou-auth
    tty: true
    env_file:
      - env/common.env
      - env/auth.env
    ports:
      - "1111:1111"
    volumes:
      - ./auth/logs:/opt
    extra_hosts:
      - "nacos.laokou.org:192.168.30.1"
      - "kafka.laokou.org:192.168.30.1"
      - "redis.laokou.org:192.168.30.1"
      - "postgresql.laokou.org:192.168.30.1"
      - "vue.laokou.org:192.168.30.1"
    restart: always
    privileged: true
    networks:
      - laokou_network
    depends_on:
      - laokou-register
      - laokou-admin
  laokou-admin:
    image: registry.cn-shenzhen.aliyuncs.com/koushenhai/laokou-admin-start:3.2.1
    container_name: laokou-admin
    tty: true
    env_file:
      - env/common.env
      - env/admin.env
    ports:
      - "9990:9990"
    volumes:
      - ./admin/logs:/opt
    extra_hosts:
      - "nacos.laokou.org:192.168.30.1"
      - "kafka.laokou.org:192.168.30.1"
      - "redis.laokou.org:192.168.30.1"
      - "postgresql.laokou.org:192.168.30.1"
      - "rocketmq.laokou.org:192.168.30.1"
      - "elasticsearch.laokou.org:192.168.30.1"
    restart: always
    privileged: true
    networks:
      - laokou_network
    depends_on:
      - laokou-register
      - elasticsearch
  laokou-logstash:
    image: registry.cn-shenzhen.aliyuncs.com/koushenhai/laokou-logstash-start:3.2.1
    container_name: laokou-logstash
    tty: true
    env_file:
      - env/common.env
      - env/logstash.env
    ports:
      - "10003:10003"
    volumes:
      - ./logstash/logs:/opt
    extra_hosts:
      - "nacos.laokou.org:192.168.30.1"
      - "kafka.laokou.org:192.168.30.1"
      - "elasticsearch.laokou.org:192.168.30.1"
    restart: always
    privileged: true
    networks:
      - laokou_network
    depends_on:
      - laokou-register
      - elasticsearch
  nginx:
    image: nginx:latest
    container_name: nginx
    # 保持容器在没有守护程序的情况下运行
    tty: true
    restart: always
    privileged: true
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./nginx/dist:/usr/share/nginx/dist
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/conf/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/logs:/var/log/nginx
    extra_hosts:
      - "vue.laokou.org:192.168.30.1"
      - "api.laokou.org:192.168.30.1"
      - "nginx.laokou.org:192.168.30.1"
    networks:
      - laokou_network
    depends_on:
      - laokou-admin

networks:
  laokou_network:
    driver: bridge
