# /*
#  * Copyright (c) 2022-2025 KCloud-Platform-IoT Author or Authors. All Rights Reserved.
#  * <p>
#  * Licensed under the Apache License, Version 2.0 (the "License");
#  * you may not use this file except in compliance with the License.
#  * You may obtain a copy of the License at
#  * <p>
#  *   http://www.apache.org/licenses/LICENSE-2.0
#  * <p>
#  * Unless required by applicable law or agreed to in writing, software
#  * distributed under the License is distributed on an "AS IS" BASIS,
#  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  * See the License for the specific language governing permissions and
#  * limitations under the License.
#  */
services:
  postgresql:
    image: timescale/timescaledb:latest-pg17
    container_name: postgresql
    # 保持容器在没有守护程序的情况下运行
    tty: true
    restart: always
    privileged: true
    ports:
      - "5432:5432"
    volumes:
      - ./postgresql17/data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=laokou123
      - TZ=Asia/Shanghai
    networks:
      - iot_network
  redis:
    image: redis:8.0.2
    container_name: redis
    # 保持容器在没有守护程序的情况下运行
    tty: true
    restart: always
    privileged: true
    ports:
      - "6379:6379"
    volumes:
      - ./redis7/conf/redis.conf:/etc/redis/redis.conf
      - ./redis7/data:/data
    command: redis-server --appendonly yes --requirepass 'laokou123'
    environment:
      - TZ=Asia/Shanghai
    networks:
      - iot_network
  kafka:
    image: bitnami/kafka:4.0.0
    container_name: kafka
    tty: true
    ports:
      - '9092:9092'
      - '9093:9093'
    environment:
      # 节点ID
      - KAFKA_BROKER_ID=1
      # 允许使用kraft，即Kafka替代Zookeeper
      - KAFKA_ENABLE_KRAFT=yes
      # kafka角色，做broker，也要做controller
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      # 指定供外部使用的控制类请求信息
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      # 定义安全协议
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      # 定义kafka服务端socket监听端口
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      # 外网访问地址
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      # 允许使用PLAINTEXT监听器，默认false，不建议在生产环境使用
      - ALLOW_PLAINTEXT_LISTENER=yes
      # 设置broker最大内存，和初始内存
      - KAFKA_HEAP_OPTS=-Xmx512M -Xms512M
      # 集群地址
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      # 节点ID
      - KAFKA_CFG_NODE_ID=1
    restart: always
    privileged: true
    networks:
      - iot_network
  # bin/pulsar-admin tenants create laokou
  # bin/pulsar-admin namespaces create laokou/mqtt
  # bin/pulsar-admin topics create-partitioned-topic laokou/mqtt/up-property-report -p 4
  # bin/pulsar-admin topics create-partitioned-topic laokou/mqtt/down-property-read -p 4
  # bin/pulsar-admin topics create-partitioned-topic laokou/mqtt/up-property-read-reply -p 4
  # bin/pulsar-admin topics create-partitioned-topic laokou/mqtt/down-property-write -p 4
  # bin/pulsar-admin topics create-partitioned-topic laokou/mqtt/up-property-write-reply -p 4
  pulsar:
    image: apachepulsar/pulsar:4.0.5
    container_name: pulsar
    # 保持容器在没有守护程序的情况下运行
    tty: true
    restart: always
    privileged: true
    command: bin/pulsar standalone
    environment:
      - PULSAR_MEM=-Xms512m -Xmx512m
    ports:
      - "6650:6650"
      - "8080:8080"
    volumes:
      - ./pulsar/data:/pulsar/data
    networks:
      - iot_network
  zookeeper:
    image: bitnami/zookeeper:3.9.3
    container_name: zookeeper
    tty: true
    ports:
      - '2181:2181'
    environment:
      # 允许匿名登录
      - ALLOW_ANONYMOUS_LOGIN=yes
    restart: always
    privileged: true
    networks:
      - iot_network
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    # 保持容器在没有守护程序的情况下运行
    tty: true
    restart: always
    privileged: true
    ports:
      - "9010:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./portainer/data:/data
networks:
  iot_network:
    driver: bridge
